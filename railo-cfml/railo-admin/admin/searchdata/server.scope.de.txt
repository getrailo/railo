server scope  aktualisieren Auf Server Administrator Einstellung zurück setzen Definert Scopeeneinstellungen, die als Standardwert für alle Webs gelten sollen. Hier können Sie festlegen, wie Railo Scopes abarbeitet. Cascading Abhängig von dieser Einstellung durchsucht Railo gewisse Scopes, um eine im CFML-Code aufgerufene Variable zu finden. Dieses passiert jedoch nur, wenn die Variable ohne vorangestellten Scope aufgerufen wird. (Beispiel: #myVar# anstelle von #variables.myVar#)- strict: durchsucht nur den Variables Scope- small:	durchsucht die Scopes: Variables, Url und Form- standard (CFML Standard):	durchsucht die Scopes: Variables, Cgi, Url, Form und Cookie Resultsets durchsuchen Wenn eine Variable keinen vorangestellten Scope hat (Beispiel: #myVar# anstelle von #variables.myVar#), kann Railo (nach dem CFML Standard) auch verfügbare Query-Resultsets durchsuchen. Session Typ CFML J2EE J2EE Sessions erlauben es Railo Sessions über einen J2EE Server-Cluster zu verteilen. Wenn Sie diese Einstellung ändern verlieren Sie die aktuelle Session und müssen sich erneut einloggen. Url und Form kombinieren Mit dieser Einstellung kann festgelegt werden, ob Railo den Url und Form Scope zu einem einzigen Scope zusammenfasst oder nicht. Wenn eine Name (Key) sowohl im Form wie URL Scope vorhanden ist, wird der Wert aus dem Form Scope verwendet. Session Management Standardmässig kann Session Management eingeschaltet werden. Diese Verhaltensweise kann von dem Tag CFApplication übersteuert werden. Client Management Standardmässig kann Client Management eingeschaltet werden. Diese Verhaltensweise kann von dem Tag CFApplication übersteuert werden. Domain Cookies Domain Cookies ein oder ausschalten. Diese Verhaltensweise kann von dem Tag CFApplication übersteuert werden. Client Cookies Client Cookies ein oder ausschalten. Diese Verhaltensweise kann von dem Tag CFApplication übersteuert werden. Local Scope Modus Definiert wie der Lokal Scope innerhalb einer UDF von einer Variable ohne Scope angesprochen wird. Modern der Lokal Scope wird immer verwendet Classic (CFML standard) er Lokal Scope wird nur verwendet, wenn der entsprechende Key darin bereits existiert Session Timeout Tage Stunden Minuten Sekunden Der Wert Tage für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Stunden für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Minuten für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Sekunden für  den Timeout muss ein ganzzahlige Wert sein. Legt die Zeit fest, wie lange Railo für inaktive Sessions den Session-Scope erhält. Diese Verhaltensweise kann von dem Tag CFApplication übersteuert werden. Application Timeout Tage Stunden Minuten Sekunden Der Wert Tage für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Stunden für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Minuten für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Sekunden für  den Timeout muss ein ganzzahlige Wert sein. Legt fest wielange Client Scope Daten behalten werden bevor sie gelöscht werden. Client Timeout Tage Stunden Minuten Sekunden Der Wert Tage für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Stunden für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Minuten für  den Timeout muss ein ganzzahlige Wert sein. Der Wert Sekunden für  den Timeout muss ein ganzzahlige Wert sein. Sets the amount of time Railo will keep the client scope alive.  aktualisieren abbrechen Auf Server Administrator Einstellung zurück setzen Dies kann auch im Application.cfc wiefolgt konfiguriert werden
