<project name="RailoBuildFile" default="package" basedir=".">
    
	<description>Main File to build the Railo Server Project</description>

	<!-- Load properties -->
	<property file="build.properties"/>
	<property name="cfmladmin" location="${railo.admin_source}" />
	
	<!-- Set jars -->
	<path id="classpath">
		<fileset dir="${lib.dir}"/>
	</path>
	
	
	<!-- include the ant-contrib stuff -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="lib/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>
	
	
	<!-- cleaning up functions -->
    <target name="clean" description="Clears the build and dist directories.">
    	<echo>Deleting ${build.dir} and ${dist.dir}</echo>
    	<delete dir="${build.dir}" />
    	<delete dir="${dist.dir}"/>
    	<delete dir="${work.dir}"/>

		<echo>Creating the build, admin and dist directories.</echo>
    	<mkdir dir="${build.dir}/loader"/>
    	<mkdir dir="${build.dir}/classes"/>
    	<mkdir dir="${build.dir}/admin"/>
    	<mkdir dir="${build.dir}/debug"/>
    	<mkdir dir="${dist.dir}"/>
    	<mkdir dir="${work.dir}"/>
    </target>
	
	<target name="build-loader" depends="clean" description="Compiles the src classes.">
        <echo>Compiling and building the railo loader</echo>
        <javac srcdir="${src.loader}" destdir="${build.dir}/loader">
        	<classpath refid="classpath"/>
        </javac>
        <echo>Packaging the railo-loader.jar file.</echo>
    	<jar destfile="${dist.dir}/railo-loader.jar">
    		<fileset dir="${build.dir}/loader"/>
    	</jar>
    </target>
	

    <target name="compile-classes" depends="build-loader" description="Compiles the src classes.">
        <echo>Compile Railo src.</echo>
		
        <javac srcdir="${src.main}" destdir="${build.dir}/classes">
        	<classpath refid="classpath"/>
        	<classpath location="${dist.dir}/railo-loader.jar" />
        </javac>
    	
    	<!--
    	 <echo>Packaging the railo-core.jar file.</echo>
    	 <jar destfile="${dist.dir}/railo-core.jar">
    	 	<fileset dir="${build.dir}/core"/>
    	 </jar>
    	-->
    	
    </target>
	
	
	
	<target name="compile-railo-context" depends="compile-classes" description="tests if the cli is working">
		
			<java classname="railo.cli.Main" fork="true">
			<classpath>
				<pathelement location="cli/railo-cli.jar" /> 
				<fileset dir="cli/lib">
				     <include name="**/*.jar"/>
				</fileset>
		     	<fileset dir="../railo-java/libs/">
		     	     <include name="**/*.jar"/>
		     	</fileset>
			</classpath>
				<arg value="-webroot=cli/webroot/"/>
				<arg value="-uri=/compileAdmin.cfm?admin_source=${cfmladmin}"/>
			</java>
			<move file="${cfmladmin}/railo-context.ra" todir="${dist.dir}" />
			
			<!-- these are ok to copy since we are getting them from the source -->
			<copy todir="${dist.dir}/resource/context/admin/dbdriver">
				<fileset dir="${cfmladmin}/admin/dbdriver"/>
			</copy>
			<copy todir="${dist.dir}/resource/context/admin/plugin">
				<fileset dir="${cfmladmin}/admin/plugin"/>
			</copy>
			<copy todir="${dist.dir}/resource/context/templates">
				<fileset dir="${cfmladmin}/templates"/>
			</copy>
				
		</target>
        	
		<!-- ================================= 
   	          target: copy railo.rc dependencies              
   	         ================================= -->
   	    <target name="copy-dependencies" depends="compile-railo-context" description="Copies the resource directory.">
   	        <echo>Copy resource directory to build from ${src.dir} to ${build.dir}</echo>
   	    	<copy todir="${build.dir}/classes/resource">
   	    		<fileset dir="${src.dir}/resource"/>
   	    	</copy>
   			<echo>Copy railo-context.ra (admin) to context (Not yet implemented).</echo>
   			<copy todir="${build.dir}/classes/resource/context">
   				<fileset dir="${build.dir}/admin"/>
   			</copy>
   	    	<!-- copy version information inside info.ini into the dist directory -->
   			<copy tofile="${build.dir}/classes/railo/runtime/Info.ini" file="${src.dir}/railo/runtime/Info.ini" overwrite="yes"/>
   	    </target>
   		
   		<!-- ================================= 
   	          target: package railo.rc              
   	         ================================= -->
   	    <target name="package" depends="copy-dependencies" description="Creates the the core.rc file.">
   	        <echo>Packaging the core.rc from ${dist.dir}</echo>
   	    	<jar destfile="${dist.dir}/${version.number}.rc">
   				<fileset dir="${build.dir}/classes" excludes="**/servlet/**"/>
   			</jar>

   	    </target>
   			
   	
   	    	
	
<!-- 
main targets 
	build a rc
	build a railo jar
	build tomcat bundle
	build war
	build jars zip
-->
	
	
	<target name="build-rc">
		<echo>Builds the .rc file that can be added to your patches directory of an existing server</echo>
	</target>
	
	<target name="build-railo-jar">
		<echo>Builds the main railo.jar file that can be deployed in the lib directory of a server</echo>
	</target>
	
	<target name="build-tomcat">
		<echo>Builds a version of tomcat with railo already installed and all the settings for it to run on multiple operating systems</echo>
	</target>
			
	<target name="build-jetty">
		<echo>Builds a version of jetty with railo already installed and all the settings for it to run on multiple operating systems</echo>
	</target>
			
	<target name="build-war">
		<echo>Builds railo packaged as a WAR ready to deploy to a servlet container</echo>
	</target>   	    			

	<target name="build-jar-zip">
		<echo>Builds railo packaged as a zip with all the other reqiured jars </echo>
	</target>   	    			
   	    			
	<!-- now build the debugger so that we can then compile the admin depends="compile-core" -->
	   <target name="compile-debug" depends="compile-classes" description="Compiles the src classes.">
	        <echo>Compile the railo debugger.</echo>
	   	
	   		<path id="coreclasspath">
	   			<fileset dir="${build.dir}/core"/>
	   		</path>
	        <javac srcdir="${src.debug}" destdir="${build.dir}/debug" >
	        	<classpath refid="coreclasspath" />
	        	<classpath refid="classpath"/>
	        	<classpath location="${lib.debug}/javax.servlet.jar" />
	        	<classpath location="${lib.debug}/org.mortbay.jetty.jar" />
	        	<classpath location="${lib.debug}/mongo-2.2.jar" />
	        	<classpath location="${dist.dir}/railo-loader.jar" />
	        </javac>
	   	
	   		<echo>Packaging the railo-debug as a .jar file (just to keep everything tidy).</echo>
	   	     <jar destfile="${dist.dir}/railo-debug.jar">
	   	    	   	<fileset dir="${build.dir}/debug"/>
	   	     </jar>
	    </target>
	   	    	   		
	   	    	   		
	   	
	   	    	   		
		
		
		
		 <target name="run-debug" depends="compile-debug" description="Runs railo from the debugger">
		        <echo>Run the Railo debugger</echo>
				 	<path id="coreclasspath">
		 	   			<fileset dir="${build.dir}/core"/>
			   		</path>
		 		<java fork="true" classname="main.RunAsJavaApplication">
		 	        <classpath refid="coreclasspath" />
		 			<classpath refid="classpath"/>
		 			<classpath location="${dist.dir}/railo-debug.jar" />
		 			<classpath location="${lib.debug}/javax.servlet.jar" />
		 			<classpath location="${lib.debug}/org.mortbay.jetty.jar" />
		 			<classpath location="${lib.debug}/mongo-2.2.jar" />
		 			<classpath location="${dist.dir}/railo-loader.jar" />
		 			<!-- 
		 			<arg value="8123"/> 
		 			<classpath refid="classpath"/>
		 			<classpath location="${dist.dir}/railo-loader.jar" /> -->
		 		</java>
		    </target>
	
	
	<!-- ================================= 
          target: createadmin        depends="compile-core"      
         ================================= -->
    <target name="createadmin"  description="Create the railo-context.ra">
    	<property name="railo.admin_source_abs" location="${railo.admin_source}"/>
    	<input message="Please enter Railo-Admin password:" addproperty="railo.password" defaultvalue="your admin password"/>
		<echo>Compiling Railo Administrator</echo>
    	<!-- please note, that you have to set the railo.admin_source location in the properties file -->
		<get src="${railo.url}?password=${railo.password}&amp;admin_source=${railo.admin_source_abs}" verbose="on" dest="generate.html"/>
    	<loadfile property="railo.compile_message" srcFile="generate.html" />
		<echo>Message from Railo: ${railo.compile_message}</echo>
    	<echo>Admin compiled to: ${railo.admin_source_abs}/railo-context.ra</echo>
    	<echo>Copying Railo Admin archive...</echo>
		<copy tofile="${src.dir}/resource/context/railo-context.ra" file="${railo.admin_source_abs}/railo-context.ra" overwrite="yes"/>
		<copy todir="${src.dir}/resource/context/admin/dbdriver">
			<fileset dir="${railo.admin_source_abs}/admin/dbdriver"/>
		</copy>
		<copy todir="${src.dir}/resource/context/admin/plugin">
			<fileset dir="${railo.admin_source_abs}/admin/plugin"/>
		</copy>
		<copy todir="${src.dir}/resource/context/templates">
			<fileset dir="${railo.admin_source_abs}/templates"/>
		</copy>
    	
    </target>
	
	

</project>
