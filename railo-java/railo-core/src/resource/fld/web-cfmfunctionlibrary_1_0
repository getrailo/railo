<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE func-lib PUBLIC "-//Railo//DTD CFML Function Library 1.0//EN"
	"dtd/web-cfmfunctionlibrary_1_0.dtd">
<func-lib>
	<flib-version>1.00</flib-version>
	<short-name>fbase</short-name>
	<uri>http://www.railo-technologies.com/cf-fld-3-1</uri>
	<display-name>Railo Core Function Library</display-name>
	<description>All build in Functions of Railo</description>
	<!-- abs -->
	<function>
		<name>abs</name>
		<class>railo.runtime.functions.math.Abs</class>
		<description>Absolute-value function. The absolute value of a number is the number without its sign.</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
			<description>Number to find the absolute value of</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- aCos -->
	<function>
		<name>aCos</name>
		<class>railo.runtime.functions.math.ACos</class>
		<description>Returns the angle whose cosine is the value passed as the argument.</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
			<description>The value to be converted into an angle. Must be between -1 and 1.</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	
	<!-- AjaxLink -->
	<function>
		<name>AjaxLink</name>
		<class>railo.runtime.functions.displayFormatting.AjaxLink</class>
		<description>Causes an HTML href attribute to display link results in the current Ajax container.</description>
		<argument>
			<name>url</name>
			<type>string</type>
			<required>Yes</required>
			<description>The URL of the link.</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- AjaxOnLoad -->
	<function>
		<name>AjaxOnLoad</name>
		<class>railo.runtime.functions.displayFormatting.AjaxOnLoad</class>
		<description>Causes the specified JavaScript function to run when the page loads.</description>
		<argument>
			<name>functionName</name>
			<type>string</type>
			<required>Yes</required>
		<description>The name of the function to run when the page loads. The specified function does not take a parameter.</description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- array -->
	<function>
		<name>array</name>
		<class>railo.runtime.functions.arrays.Array_</class>
		<description>Creates a new array</description>
		<argument-type>dynamic</argument-type>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- _jsonArray -->
	<function>
		<name>_jsonArray</name>
		<class>railo.runtime.functions.arrays.JsonArray</class>
		<status>hidden</status>
		<description>internal function used for literal array defintion</description>
		<argument-type>dynamic</argument-type>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- arrayAppend -->
	<function>
		<name>arrayAppend</name>
		<class>railo.runtime.functions.arrays.ArrayAppend</class>
		<description>Appends an array element to an array.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to which the element should be appended.</description>
		</argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
			<description>The element to append. Can be any type.</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayAvg -->
	<function>
		<name>arrayAvg</name>
		<class>railo.runtime.functions.arrays.ArrayAvg</class>
		<description>Calculates the average of the values in an array.
All elements in the array must contain values that can be automatically converted to numeric.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to calculate the average values from</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arrayClear -->
	<function>
		<name>arrayClear</name>
		<class>railo.runtime.functions.arrays.ArrayClear</class>
		<description>Removes all elements from an array.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array </description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- ArrayContains -->
	<function>
		<name>ArrayContains</name>
		<class>railo.runtime.functions.arrays.ArrayContains</class>
		<description>Returns true if specified object is present is given array</description>
		<argument>
			<name>haystack</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array that we are looking for the item</description>
		</argument>
		<argument>
			<name>needle</name>
			<type>string</type>
			<required>Yes</required>
			<description>The item that we are looking for in the array</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- ArrayContainsNoCase -->
	<function>
		<name>ArrayContainsNoCase</name>
		<class>railo.runtime.functions.arrays.ArrayContainsNoCase</class>
		<description>Search an array to find a case insensitive item</description>
		<argument>
			<name>haystack</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array that we are looking for the item</description>
		</argument>
		<argument>
			<name>needle</name>
			<type>string</type>
			<required>Yes</required>
			<description>The item that we are looking for in the array</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arrayDelete -->
	<function>
		<name>arrayDelete</name>
		<class>railo.runtime.functions.arrays.ArrayDelete</class>
		<description>Deletes specified object from given array</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to delete from</description>
		</argument>
		<argument>
			<name>value</name>
			<type>object</type>
			<required>Yes</required>
			<description>The value to delete</description>
		</argument>
		<argument>
			<name>scope</name>
			<type>string</type>
			<required>No</required>
			<description>
				one: replaces the first occurrence (default)
				all: replaces all occurrences
			</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayDeleteAt -->
	<function>
		<name>arrayDeleteAt</name>
		<class>railo.runtime.functions.arrays.ArrayDeleteAt</class>
		<description>Deletes an element from an array and resizes the array so that the deleted element doesn't leave a gap.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array that the element will be deleted from.</description>
		</argument>
		<argument>
			<name>position</name>
			<type>number</type>
			<required>Yes</required>
			<description>The numeric position of the element. Remember that CFML arrays start at 1 not 0.</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayFind -->
	<function>
		<name>arrayFind</name>
		<class>railo.runtime.functions.arrays.ArrayFind</class>
		<description>These functions searches the array for the specified object.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to search in</description>
		</argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
			<description>The value to find</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arrayFindNoCase -->
	<function>
		<name>arrayFindNoCase</name>
		<class>railo.runtime.functions.arrays.ArrayFindNoCase</class>
		<description>These functions performs a case-insensitive search in the array for the specified object.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to search in</description>
		</argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
			<description>The value to find</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arrayFirst -->
	<function>
		<name>arrayFirst</name>
		<class>railo.runtime.functions.arrays.ArrayFirst</class>
		<description>Returns the first item from an array. Throws an error if the array is empty.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to obtain the first Item from</description>
		</argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ArrayIndexExists -->
	<function>
		<name>ArrayIndexExists</name>
		<class>railo.runtime.functions.arrays.ArrayIndexExists</class>
		<description>Returns whether there exists an item in the array at the selected index.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to search</description>
		</argument>
		<argument>
			<name>index</name>
			<type>number</type>
			<required>Yes</required>
			<description>The index which to check</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	<!-- ArrayIsDefined -->
	<function>
		<name>ArrayIsDefined</name>
		<class>railo.runtime.functions.arrays.ArrayIsDefined</class>
		<description>alias for arrayIndexExists</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array to search</description>
		</argument>
		<argument>
			<name>index</name>
			<type>number</type>
			<required>Yes</required>
			<description>The index which to check</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	
	
	<!-- arrayLast -->
	<function>
		<name>arrayLast</name>
		<class>railo.runtime.functions.arrays.ArrayLast</class>
		<description>Returns the last element of an array</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>a array</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- arrayInsertAt -->
	<function>
		<name>arrayInsertAt</name>
		<class>railo.runtime.functions.arrays.ArrayInsertAt</class>
		<description>Inserts a value at the specified position in the array.
If the element is inserted before the end of the array, Railo shifts the positions of all elements with a higher index to make room.</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
			<description>The array which will have the new element inserted.</description>
		</argument>
		<argument>
			<name>position</name>
			<type>number</type>
			<required>Yes</required>
			<description>The numerical index in the array where the new element will be inserted.
Must be less than or equal to the length of the array.
Remember CFML arrays start at 1 not 0.</description>
		</argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
			<description>value to insert</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayIsEmpty -->
	<function>
		<name>arrayIsEmpty</name>
		<class>railo.runtime.functions.arrays.ArrayIsEmpty</class>
		<description>Determines if the array or xml object is empty of all elements</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayLen -->
	<function>
		<name>arrayLen</name>
		<class>railo.runtime.functions.arrays.ArrayLen</class>
		<description>Returns the length of the array</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arrayMax -->
	<function>
		<name>arrayMax</name>
		<class>railo.runtime.functions.arrays.ArrayMax</class>
		<description>Returns the maximum value represented in the array</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arrayMin -->
	<function>
		<name>arrayMin</name>
		<class>railo.runtime.functions.arrays.ArrayMin</class>
		<description>Returns the minimum value represented in the array</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array </description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arrayMerge -->
	<function>
		<name>arrayMerge</name>
		<class>railo.runtime.functions.arrays.ArrayMerge</class>
		<description>This function merges two arrays to a single one.</description>
		<argument>
			<name>array1</name>
			<type>array</type>
			<required>Yes</required>
			<description>first array</description>
    </argument>
		<argument>
			<name>array2</name>
			<type>array</type>
			<required>Yes</required>
			<description>second array</description>
    </argument>
		<argument>
			<name>leaveIndex</name>
			<type>boolean</type>
			<required>No</required>
			<description>defines whether the merged arrays will maintain their index values or if the second array will simply append to the first one. If both arrays contain the same index and you specified the parameter leaveIndex to true, the corresponding index in the resulting array will always contain the value of the index of the first array.</description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- arrayNew -->
	<function>
		<name>arrayNew</name>
		<class>railo.runtime.functions.arrays.ArrayNew</class>
		<description>create a new array</description>
		<argument>
			<name>dimension</name>
			<type>number</type>
			<required>no</required>
		<description>Number of dimensions in new array: 1, 2, or 3</description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- arrayPrepend -->
	<function>
		<name>arrayPrepend</name>
		<class>railo.runtime.functions.arrays.ArrayPrepend</class>
		<description>Inserts the given data at the start of the array or XML object</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array</description>
    </argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
			<description>value to prepend</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayResize -->
	<function>
		<name>arrayResize</name>
		<class>railo.runtime.functions.arrays.ArrayResize</class>
		<description>Grows the size of the array to the value givens</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array </description>
    </argument>
		<argument>
			<name>minimum_size</name>
			<type>number</type>
			<required>Yes</required>
			<description>minimum size of the array</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayReverse -->
	<function>
		<name>arrayReverse</name>
		<class>railo.runtime.functions.arrays.ArrayReverse</class>
		<description>Returns a new array, with all the elements reversed</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>the array to reverse</description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- arraySet -->
	<function>
		<name>arraySet</name>
		<class>railo.runtime.functions.arrays.ArraySet</class>
		<description>Sets the range of elements to the value given</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array.</description>
    </argument>
		<argument>
			<name>start_pos</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>end_pos</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arraySlice -->
	<function>
		<name>arraySlice</name>
		<class>railo.runtime.functions.arrays.ArraySlice</class>
		<description>Returns a new array, from the start position up to the count of elements</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>offset</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- arraySort -->
	<function>
		<name>arraySort</name>
		<class>railo.runtime.functions.arrays.ArraySort</class>
		<description>Reorders the elements in the array according to the sort type and direction</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array </description>
    </argument>
		<argument>
			<name>sort_type</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>sort_order</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arraySum -->
	<function>
		<name>arraySum</name>
		<class>railo.runtime.functions.arrays.ArraySum</class>
		<description>Adds up all the values in the array and returns the sum</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array </description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- arraySwap -->
	<function>
		<name>arraySwap</name>
		<class>railo.runtime.functions.arrays.ArraySwap</class>
		<description>Swaps the elements around at the given index position</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of an array </description>
    </argument>
		<argument>
			<name>position1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>position2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- arrayToList -->
	<function>
		<name>arrayToList</name>
		<class>railo.runtime.functions.list.ArrayToList</class>
		<description>Transform the array to a list of elements delimiter by the given string</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description>Name of array </description>
    </argument>
		<argument>
			<name>delimiter</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- arrayToStruct -->
	<function>
		<name>arrayToStruct</name>
		<class>railo.runtime.functions.arrays.ArrayToStruct</class>
		<description>Transform the array to a struct, the index of the array is the key of the struct</description>
		<argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- asc -->
	<function>
		<name>asc</name>
		<class>railo.runtime.functions.string.Asc</class>
		<description>Determines the value of a character.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- aSin -->
	<function>
		<name>aSin</name>
		<class>railo.runtime.functions.math.ASin</class>
		<description>Returns the arc sine value of the number given</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Sine of an angle. The value must be between -1 and 1, inclusive.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- atn -->
	<function>
		<name>atn</name>
		<class>railo.runtime.functions.math.Atn</class>
		<description>Returns the arc tangent value of the number given</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Tangent of an angle</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- beat -->
	<function>
		<name>beat</name>
		<class>railo.runtime.functions.dateTime.Beat</class>
		<description>
		Outputs the actuell swatch time.
		It is a new system of time developed by Swatch, the Swiss watch maker.  
		It involves setting the current day into 1000 "beats" instead of 24 hours.  
		Internet Time eliminates the need for geographical time zones, perfect for the internet.
		</description>
		<argument>
			<name>time</name>
			<type>any</type>
			<required>No</required>
			<description>
			the local time to geat beat time from
			</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- binaryDecode -->
	<function>
		<name>binaryDecode</name>
		<class>railo.runtime.functions.conversion.BinaryDecode</class>
		<description>
		Decodes Binary Data that are encoded as String
		</description>
		<argument>
			<name>encoded_binary</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string containing encoded binary data.</description>
    </argument>
		<argument>
			<name>binaryencoding</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>binary</type>
		</return>
	</function>
	<!-- binaryEncode -->
	<function>
		<name>binaryEncode</name>
		<class>railo.runtime.functions.conversion.BinaryEncode</class>
		<description>
		Encodes Binary Data to a String
		</description>
		<argument>
			<name>binary</name>
			<type>binary</type>
			<required>Yes</required>
		<description>A variable containing the binary data to encode.</description>
    </argument>
		<argument>
			<name>binaryencoding</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
		
	<!-- CharsetDecode -->
	<function>
		<name>charsetDecode</name>
		<class>railo.runtime.functions.conversion.CharsetDecode</class>
		<description>
		Decodes a String to a binary
		</description>
		<argument>
			<name>encoded_binary</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string containing data to encode in binary format.</description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>binary</type>
		</return>
	</function>

	<!-- CharsetEncode -->
	<function>
		<name>charsetEncode</name>
		<class>railo.runtime.functions.conversion.CharsetEncode</class>
		<description>
		Encodes Binary Data to a String
		</description>
		<argument>
			<name>binary</name>
			<type>binary</type>
			<required>Yes</required>
		<description>A variable containing binary data to decode into text.</description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- bitAnd -->
	<function>
		<name>bitAnd</name>
		<class>railo.runtime.functions.math.BitAnd</class>
		<description>Apply a logical AND on the two numbers given</description>
		<argument>
			<name>number1</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<argument>
			<name>number2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitMaskClear -->
	<function>
		<name>bitMaskClear</name>
		<class>railo.runtime.functions.math.BitMaskClear</class>
		<description>Clears the bits from the given bit position for the number of bits given</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitMaskRead -->
	<function>
		<name>bitMaskRead</name>
		<class>railo.runtime.functions.math.BitMaskRead</class>
		<description>Reads the bit mask at the given position and length</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer to mask</description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitMaskSet -->
	<function>
		<name>bitMaskSet</name>
		<class>railo.runtime.functions.math.BitMaskSet</class>
		<description>Set a mask on the given number covering the range given</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<argument>
			<name>mask</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitNot -->
	<function>
		<name>bitNot</name>
		<class>railo.runtime.functions.math.BitNot</class>
		<description>Returns the logical NOT of the given number</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitOr -->
	<function>
		<name>bitOr</name>
		<class>railo.runtime.functions.math.BitOr</class>
		<description>Apply a logical OR on the two numbers given</description>
		<argument>
			<name>number1</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<argument>
			<name>number2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitSHLN -->
	<function>
		<name>bitSHLN</name>
		<class>railo.runtime.functions.math.BitSHLN</class>
		<description>Shifts the given number the number of bits to the left</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<argument>
			<name>count</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitSHRN -->
	<function>
		<name>bitSHRN</name>
		<class>railo.runtime.functions.math.BitSHRN</class>
		<description>Shifts the given number the number of bits to the right</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<argument>
			<name>count</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- bitXor -->
	<function>
		<name>bitXor</name>
		<class>railo.runtime.functions.math.BitXor</class>
		<description>Apply a logical XOR on the two numbers given</description>
		<argument>
			<name>number1</name>
			<type>number</type>
			<required>Yes</required>
		<description>32-bit signed integer</description>
    </argument>
		<argument>
			<name>number2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
		
	<!-- CacheClear -->
	<function>
		<name>CacheClear</name>
		<class>railo.runtime.functions.cache.CacheClear</class>
		<description>Flushes the cache</description>
		<argument>
			<name>filter</name>
			<type>string</type>
			<required>No</required>
			<description>You can specify a key filter for the elements in the cache to flush, the filter follow the same rules as for cfdirectory-filter</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	
		
	<!-- CacheCount -->
	<function>
		<name>CacheCount</name>
		<class>railo.runtime.functions.cache.CacheCount</class>
		<description>Returns the amount (integer) of keys stored in the cache.</description>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	
	<!-- CacheDelete -->
	<function>
		<name>CacheDelete</name>
		<class>railo.runtime.functions.cache.CacheDelete</class>
		<description>Deletes a single element from the cache.</description>
		<argument>
			<name>id</name>
			<type>string</type>
			<required>Yes</required>
			<description>the id of the element to delete, can also contain a "," (not used as separator)</description>
		</argument>
		<argument>
			<name>throwOnError</name>
			<type>boolean</type>
			<required>No</required>
			<description>define if the functions throws a exception when the element does not exist (default is false).</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- cacheGet -->
	<function>
		<name>cacheGet</name>
		<class>railo.runtime.functions.cache.CacheGet</class>
		<description>Returns a element from Cache that match the given key.</description>
		<argument>
			<name>id</name>
			<type>string</type>
			<required>Yes</required>
			<description>name of the element to return</description>
		</argument>
		<argument>
			<name>throwWhenNotExist</name>
			<type>boolean</type>
			<required>no</required>
			<description>define if the functions throws a exception when the element does not exist (default is false).</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>object</type>
		</return>
	</function>
	
	<!-- CacheGetDefaultCacheName -->
	<function>
		<name>CacheGetDefaultCacheName</name>
		<class>railo.runtime.functions.cache.CacheGetDefaultCacheName</class>
		<description>return the default cache name for a specific type</description>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>yes</required>
			<description>cache type, valid values are [object,resource,template,query]</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- CacheGetAll -->
	<function>
		<name>CacheGetAll</name>
		<class>railo.runtime.functions.cache.CacheGetAll</class>
		<description>this function return a structure containing all elements inside the cache.</description>
		<argument>
			<name>filter</name>
			<type>string</type>
			<required>No</required>
			<description>key filter for the elements, the filter follow the same rules as for cfdirectory-filter.</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	
	<!-- CacheGetAllIds -->
	<function>
		<name>CacheGetAllIds</name>
		<class>railo.runtime.functions.cache.CacheGetAllIds</class>
		<description>this function return a array containing all keys inside the cache.</description>
		<argument>
			<name>filter</name>
			<type>string</type>
			<required>No</required>
			<description>key filter for the elements, the filter follow the same rules as for cfdirectory-filter.</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>array</type>
		</return>
	</function>
	
	<!-- CacheGetMetadata -->
	<function>
		<name>CacheGetMetadata</name>
		<class>railo.runtime.functions.cache.CacheGetMetadata</class>
		<description>returns a structure with some Metadata regarding the cache elements (keys returned depends on the Cache type used).</description>
		<argument>
			<name>id</name>
			<type>string</type>
			<required>yes</required>
			<description>name of the element you need metadat for</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- CacheGetProperties -->
	<function>
		<name>CacheGetProperties</name>
		<class>railo.runtime.functions.cache.CacheGetProperties</class>
		<description>returns array with different properties about the cache (keys returned depends on the Cache type used).</description>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>no</required>
			<description>define which cache instances information are returned
- "" or not set - information to all default caches (object,template,resource,query)
- "object" - information to  "Default Object" Cache
- "template" - information to  "Default Template" Cache
- "query" - information to  "Default Query" Cache
- "resource" - information to  "Default Resource" Cache
- {cache name} - information to  a specific cache </description>
		</argument>
		<return>
			<type>array</type>
		</return>
	</function>
	
	<!-- CacheKeyExists -->
	<function>
		<name>CacheKeyExists</name>
		<class>railo.runtime.functions.cache.CacheKeyExists</class>
		<description>Returns true/false whether the cache contains an element with the certain keyname.</description>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>yes</required>
			<description>key to check</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	<!-- CacheSetProperties -->
	<function>
		<name>CacheSetProperties</name>
		<class>railo.runtime.functions.cache.CacheSetProperties</class>
		<description>
		This function is not supported by Railo, because we see this as a security risk, you can modifie cache configuration without a password,
you can use tag cfadmin instead. we will add support for this function in a future release, but then you can enable,disable this  function in admin for every single cache instance. 
Sets the cache properties for the object cache, the page cache, or both. If a cache does not yet exist, creates it. The cache and properties are application-specific.</description>
		<argument>
			<name>propsSruct</name>
			<type>struct</type>
			<required>yes</required>
			<description>A structure specifying the cache properties plus identifying information</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- cachePut -->
	<function>
		<name>cachePut</name>
		<class>railo.runtime.functions.cache.CachePut</class>
		<description>Stores an object in the cache, with a life time and a idle time.</description>
		<argument>
			<name>id</name>
			<type>string</type>
			<required>Yes</required>
			<description>The id for the cache object.</description>
		</argument>
		<argument>
			<name>value</name>
			<type>object</type>
			<required>Yes</required>
			<description>The value of the object.</description>
		</argument>
		<argument>
			<name>timeSpan</name>
			<type>timespan</type>
			<required>No</required>
			<description>The interval until the object is flushed from the cache, as a decimal number of days. One way to set the value is to use the return value from the CreateTimeSpan function. The default is to not time out the object.</description>
		</argument>
		<argument>
			<name>idleTime</name>
			<type>timespan</type>
			<required>No</required>
			<description>A decimal number of days after which the object is flushed from the cache if it is not accessed during that time. One way to set the value is to use the return value from the CreateTimeSpan function.</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- cacheRemove -->
	<function>
		<name>cacheRemove</name>
		<class>railo.runtime.functions.cache.CacheRemove</class>
		<description>removes elements from cache defined with argument ids.</description>
		<argument>
			<name>ids</name>
			<type>object</type>
			<required>Yes</required>
			<description>This can be a string list of multiple elements or a array containing the keys</description>
		</argument>
		<argument>
			<name>throwOnError</name>
			<type>boolean</type>
			<required>No</required>
			<description>define if the functions throws a exception when the element does not exist (default is false)</description>
		</argument>
		<argument>
			<name>cacheName</name>
			<type>string</type>
			<required>No</required>
			<description>definition of the cache used by name, when not set the "default Object Cache" defined in Railo Administrator is used instead.</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- ceiling -->
	<function>
		<name>ceiling</name>
		<class>railo.runtime.functions.math.Ceiling</class>
		<description>Returns the smallest number that is greater than the given parameter</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>A real number</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- chr -->
	<function>
		<name>chr</name>
		<class>railo.runtime.functions.string.Chr</class>
		<description>Returns the character represented by the ascii value</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>A value (a number in the range 0 - 65535, inclusive)</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- cJustify -->
	<function>
		<name>cJustify</name>
		<class>railo.runtime.functions.string.CJustify</class>
		<description>Returns the given string justified to the center, padding out the words with spaces accordingly</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>May be empty. If it is a variable that is defined as a number, the function processes it as a string. </description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- compare -->
	<function>
		<name>compare</name>
		<class>railo.runtime.functions.string.Compare</class>
		<description>Performs a lexical comparison. If string1 is less than string2 then -1 returned. If string1 greater than string then 1 is return. 0 if equals</description>
		<argument>
			<name>string1</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one </description>
    </argument>
		<argument>
			<name>string2</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- compareNoCase -->
	<function>
		<name>compareNoCase</name>
		<class>railo.runtime.functions.string.CompareNoCase</class>
		<description>Performs a lexical comparison, ignoring the case. If string1 is less than string2 then -1 returned. If string1 greater than string then 1 is return. 0 if equals</description>
		<argument>
			<name>string1</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one </description>
    </argument>
		<argument>
			<name>string2</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- componentInfo -->
	<function>
		<name>componentInfo</name>
		<class>railo.runtime.functions.component.ComponentInfo</class>
		<status>deprecated</status>
		<description>this function is deprecated, use function getMetadata instead.</description>
		<argument>
			<name>component</name>
			<type>component</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- componentCacheClear -->
	<function>
		<name>componentCacheClear</name>
		<class>railo.runtime.functions.component.ComponentCacheClear</class>
		<description>flush the component path cache</description>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- componentCacheList -->
	<function>
		<name>componentCacheList</name>
		<class>railo.runtime.functions.component.ComponentCacheList</class>
		<description>list elements in the component path cache</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	
	<!-- ctCacheClear -->
	<function>
		<name>ctCacheClear</name>
		<class>railo.runtime.functions.other.CTCacheClear</class>
		<description>flush the customtag path cache</description>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ctCacheList -->
	<function>
		<name>ctCacheList</name>
		<class>railo.runtime.functions.other.CTCacheList</class>
		<description>list elements in the customtag path cache</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- compress -->
	<function>
		<name>compress</name>
		<class>railo.runtime.functions.system.Compress</class>
		<description>Compress given source to different formats.</description>
		<argument>
			<name>format</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			Format to compress (bzip,gzip,tar,tbz (tar bzip),tgz (tar gzip) and zip)
			</description>
		</argument>
		<argument>
			<name>source</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			source file or directory to compress
			</description>
		</argument>
		<argument>
			<name>target</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			name of the target compressed file
			</description>
		</argument>
		<argument>
			<name>includeBaseFolder</name>
			<type>boolean</type>
			<required>No</required>
			<description>
			take the folder or only content of folder
			</description>
		</argument>
		<argument>
			<name>mode</name>
			<type>string</type>
			<required>no</required>
			<description>
			mode of the values
			</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- cos -->
	<function>
		<name>cos</name>
		<class>railo.runtime.functions.math.Cos</class>
		<description>Returns the trigonometric cosine of an angle</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Angle, in radians, for which to calculate the cosine</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- createDate -->
	<function>
		<name>createDate</name>
		<class>railo.runtime.functions.dateTime.CreateDate</class>
		<description>Creates a CFML date object from the given year, month and day</description>
		<argument>
			<name>year</name>
			<type>number</type>
			<required>Yes</required>
		<description>Integer in the range 0-9999. Integers in the range 0-29 are converted to 2000-2029. Integers in the range 30-99 are converted to 1930-1999. You cannot specify dates before AD 100.</description>
    </argument>
		<argument>
			<name>month</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>day</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>NO</required>
		<description></description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- createDateTime -->
	<function>
		<name>createDateTime</name>
		<class>railo.runtime.functions.dateTime.CreateDateTime</class>
		<description>Creates a CFML date/time object from the given year, month, day, hour, minute and second</description>
		<argument>
			<name>year</name>
			<type>number</type>
			<required>Yes</required>
		<description>Integer in the range 0-9999. Integers in the range 0-29 are converted to 2000-2029. Integers in the range 30-99 are converted to 1930-1999. You cannot specify dates before AD 100.</description>
    </argument>
		<argument>
			<name>month</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>day</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>hour</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>minute</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>second</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>millis</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>NO</required>
		<description></description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	
	
	<!-- _createComponent -->
	<function>
		<name>_createComponent</name>
		<class>railo.runtime.functions.other._CreateComponent</class>
		<status>hidden</status>
		<description>literal component definition, used by the serialize function</description>
		<argument-type>dynamic</argument-type>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- createObject -->
	<function>
		<name>createObject</name>
		<class>railo.runtime.functions.other.CreateObject</class>
		<description>Creates an object and makes it available in the CFML space. Defaults type to a 'component'</description>
		<argument>
			<name>arg1</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>arg2</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>arg3</name>
			<type>object</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>arg4</name>
			<type>object</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- createODBCDate -->
	<function>
		<name>createODBCDate</name>
		<class>railo.runtime.functions.dateTime.CreateODBCDate</class>
		<description>Creates a date object for use with ODBC</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- createODBCDateTime -->
	<function>
		<name>createODBCDateTime</name>
		<class>railo.runtime.functions.dateTime.CreateODBCDateTime</class>
		<description>Creates a date/time object for use with ODBC</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- createODBCTime -->
	<function>
		<name>createODBCTime</name>
		<class>railo.runtime.functions.dateTime.CreateODBCTime</class>
		<description>Creates a time object for use with ODBC</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- createTime -->
	<function>
		<name>createTime</name>
		<class>railo.runtime.functions.dateTime.CreateTime</class>
		<description>Creates a CFML time object from the given hour, minute and second</description>
		<argument>
			<name>hour</name>
			<type>number</type>
			<required>Yes</required>
		<description>Number in the range 0-23</description>
    </argument>
		<argument>
			<name>minute</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>second</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>millis</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- createTimeSpan -->
	<function>
		<name>createTimeSpan</name>
		<class>railo.runtime.functions.dateTime.CreateTimeSpan</class>
		<description>Creates a CFML time object that represents a time span/range</description>
		<argument>
			<name>days</name>
			<type>number</type>
			<required>Yes</required>
		<description>number of days in time period</description>
    </argument>
		<argument>
			<name>hours</name>
			<type>number</type>
			<required>Yes</required>
		<description>number of hours in time period</description>
		</argument>
		<argument>
			<name>minutes</name>
			<type>number</type>
			<required>Yes</required>
		<description>number of minutes in time period</description>
		</argument>
		<argument>
			<name>seconds</name>
			<type>number</type>
			<required>Yes</required>
		<description>number of seconds in time period</description>
		</argument>
		<argument>
			<name>milliseconds</name>
			<type>number</type>
			<required>no</required>
		<description>number of milliseconds in time period</description>
		</argument>
		<return>
			<type>timespan</type>
		</return>
	</function>
	<!-- createUUID -->
	<function>
		<name>createUUID</name>
		<class>railo.runtime.functions.other.CreateUUID</class>
		<description>Creates a string that represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- createGUID -->
	<function>
		<name>createGUID</name>
		<class>railo.runtime.functions.other.CreateGUID</class>
		<description>A globally unique identifier or GUID is a special type of identifier used in software applications to provide a unique reference number. The value is represented as a 32 character hexadecimal string, such as {21EC2020-3AEA-1069-A2DD-08002B30309D} and usually stored as a 128 bit integer.</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- datasourceFlushMetaCache -->
	<function>
		<name>datasourceFlushMetaCache</name>
		<class>railo.runtime.functions.other.DatasourceFlushMetaCache</class>
		<description>Flush the meta data stored for a certain datasource used for stored procedures, this is only supported for Oracle datasources</description>
		<argument>
			<name>datasourceName</name>
			<type>string</type>
			<required>no</required>
			<description>name of the datasource to flush, when not defined all caches are flushed</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- dateAdd -->
	<function>
		<name>dateAdd</name>
		<class>railo.runtime.functions.dateTime.DateAdd</class>
		<description>Adds/Subtracts date units from a given date</description>
		<argument>
			<name>datepart</name>
			<type>string</type>
			<required>Yes</required>
		<description>String:</description>
    </argument>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- dateCompare -->
	<function>
		<name>dateCompare</name>
		<class>railo.runtime.functions.dateTime.DateCompare</class>
		<description>Compares to date, to the given optional resolution. Returns -1 if date1 is before date2. Returns 1 if date1 is after date2. Returns 0 if equal</description>
		<argument>
			<name>date1</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<argument>
			<name>date2</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>datepart</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- dateConvert -->
	<function>
		<name>dateConvert</name>
		<class>railo.runtime.functions.dateTime.DateConvert</class>
		<description>Converts a date to the given locale</description>
		<argument>
			<name>conversion_type</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- dateDiff -->
	<function>
		<name>dateDiff</name>
		<class>railo.runtime.functions.dateTime.DateDiff</class>
		<description>Determines the number of given date parts between two different dates</description>
		<argument>
			<name>datepart</name>
			<type>string</type>
			<required>Yes</required>
		<description>String that specifies the units in which to count; for example yyyy requests a date difference in whole years.</description>
    </argument>
		<argument>
			<name>date1</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>date2</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- dateFormat -->
	<function>
		<name>dateFormat</name>
		<class>railo.runtime.functions.displayFormatting.DateFormat</class>
		<description>Formats a date string to a given output</description>
		<argument>
			<name>date</name>
			<type>any</type>
			<required>Yes</required>
		<description>Date object</description>
    </argument>
		<argument>
			<name>mask</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- datePart -->
	<function>
		<name>datePart</name>
		<class>railo.runtime.functions.dateTime.DatePart</class>
		<description>Extracts the given date part from the date object</description>
		<argument>
			<name>datepart</name>
			<type>string</type>
			<required>Yes</required>
		<description>String:</description>
    </argument>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- day -->
	<function>
		<name>day</name>
		<class>railo.runtime.functions.dateTime.Day</class>
		<description>Returns the day number referenced by the given date</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>Date/time object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- dayOfWeek -->
	<function>
		<name>dayOfWeek</name>
		<class>railo.runtime.functions.dateTime.DayOfWeek</class>
		<description>Returns the day of the week the date represents</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>Date/time object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- lsdayOfWeek -->
	<function>
		<name>lsdayOfWeek</name>
		<class>railo.runtime.functions.international.LSDayOfWeek</class>
		<description>Returns the day of the week the date represents in locale format</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- dayOfWeekAsString -->
	<function>
		<name>dayOfWeekAsString</name>
		<class>railo.runtime.functions.string.DayOfWeekAsString</class>
		<description>Returns the string representation of the given day index</description>
		<argument>
			<name>day_of_week</name>
			<type>number</type>
			<required>Yes</required>
		<description>Integer, in the range 1 (Sunday) - 7 (Saturday).</description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- dayOfWeekShortAsString -->
	<function>
		<name>dayOfWeekShortAsString</name>
		<class>railo.runtime.functions.string.DayOfWeekShortAsString</class>
		<description>Returns the string representation of the given day index in short form</description>
		<argument>
			<name>day_of_week</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- dayOfYear -->
	<function>
		<name>dayOfYear</name>
		<class>railo.runtime.functions.dateTime.DayOfYear</class>
		<description>Returns the year number referenced by the given date</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>Date/time object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- daysInMonth -->
	<function>
		<name>daysInMonth</name>
		<class>railo.runtime.functions.dateTime.DaysInMonth</class>
		<description>Returns the number of days in the month that the date object represents</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>Date/time object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- daysInYear -->
	<function>
		<name>daysInYear</name>
		<class>railo.runtime.functions.dateTime.DaysInYear</class>
		<description>Returns the number of days in the year of the given date object (taking into account of leap years)</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>Dateobject</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- dE -->
	<function>
		<name>dE</name>
		<class>railo.runtime.functions.dynamicEvaluation.DE</class>
		<description>Escapes the string, and places the result in quote marks. For use with IIF/Evaluate</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String to evaluate, after delay</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- decimalFormat -->
	<function>
		<name>decimalFormat</name>
		<class>railo.runtime.functions.displayFormatting.DecimalFormat</class>
		<description>Returns a formatted string of the number with 2 decimal points and thousand markers (000,000.00)</description>
		<argument>
			<name>number</name>
			<type>any</type>
			<required>Yes</required>
		<description>Number to format</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- decrementValue -->
	<function>
		<name>decrementValue</name>
		<class>railo.runtime.functions.math.DecrementValue</class>
		<description>Decrements the current number by one</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Number to decrement</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- decrypt -->
	<function>
		<name>decrypt</name>
		<class>railo.runtime.functions.other.Decrypt</class>
		<description>Decrypts the given string with the optional parameters</description>
		<argument>
			<name>encrypted_string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String to decrypt.</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- decryptBinary -->
	<function>
		<name>decryptBinary</name>
		<class>railo.runtime.functions.other.DecryptBinary</class>
		<description>Decrypts the given binary with the optional parameters</description>
		<argument>
			<name>input</name>
			<type>any</type>
			<required>Yes</required>
		<description>Binary data to decrypt.</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- deleteClientVariable -->
	<function>
		<name>deleteClientVariable</name>
		<class>railo.runtime.functions.other.DeleteClientVariable</class>
		<description>Removes the element represented by the key from the [client] scope</description>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description>Name of a client variable to delete, surrounded by double-quotation marks</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- DirectoryCreate -->
	<function>
		<name>DirectoryCreate</name>
		<class>railo.runtime.functions.file.DirectoryCreate</class>
		<description>Creates a directory on the file system given {supports Amazon S3}</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
			<description>Absolute path of the directory to be created</description>
		</argument>
		<argument>
			<name>doParent</name>
			<type>boolean</type>
			<required>no</required>
			<description>create parent directory when not exist</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- DirectoryDelete -->
	<function>
		<name>DirectoryDelete</name>
		<class>railo.runtime.functions.file.DirectoryDelete</class>
		<description>Deletes the file at the given location {supports Amazon S3}</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
			<description>Absolute path of the directory to be deleted</description>
		</argument>
		<argument>
			<name>recurse</name>
			<type>boolean</type>
			<required>no</required>
			<description>delete content of the directory</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- directoryExists -->
	<function>
		<name>directoryExists</name>
		<class>railo.runtime.functions.system.DirectoryExists</class>
		<description>Checks to see if the given directory exists</description>
		<argument>
			<name>absolute_path</name>
			<type>string</type>
			<required>Yes</required>
		<description>An absolute path. Alternatively, you can specify IP address as in the following example: DirectoryExists(\"//12.3.123.123/c_drive/test\");</description>
    </argument>
		<argument>
			<name>allowRealPath</name>
			<type>boolean</type>
			<required>no</required>
			<description>defines if relative paths are interpreted or not</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	<!-- DirectoryList -->
	<function>
		<name>DirectoryList</name>
		<class>railo.runtime.functions.file.DirectoryList</class>
		<description>For the given directory get the file contents {supports Amazon S3}</description>
		<argument>
			<name>absolute_path</name>
			<type>string</type>
			<required>Yes</required>
		<description>The absolute path of the directory for which to list the contents. Alternatively, you can specify IP address as in the following example: DirectoryList(\"//12.3.123.123/c_drive/test\");.</description>
    </argument>
		<argument>
			<name>recurse</name>
			<type>boolean</type>
			<required>no</required>
			<description></description>
		</argument>
		<argument>
			<name>listInfo</name>
			<type>string</type>
			<required>no</required>
			<description></description>
		</argument>
		<argument>
			<name>filter</name>
			<type>any</type>
			<required>no</required>
			<description></description>
		</argument>
		<argument>
			<name>sort</name>
			<type>string</type>
			<required>no</required>
			<description></description>
		</argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- DirectoryRename -->
	<function>
		<name>DirectoryRename</name>
		<class>railo.runtime.functions.file.DirectoryRename</class>
		<description>Renames a directory.</description>
		<argument>
			<name>oldPath</name>
			<type>string</type>
			<required>Yes</required>
			<description>Absolute path of the directory to be renamed</description>
		</argument>
		<argument>
			<name>newPath</name>
			<type>string</type>
			<required>Yes</required>
			<description>new name for the directory</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- DeserializeJSON -->
	<function>
		<name>DeserializeJSON</name>
		<class>railo.runtime.functions.conversion.DeserializeJSON</class>
		<description>Converts a JSON (JavaScript Object Notation) string data representation into CFML data, such as a CFML structure or array.</description>
		<argument>
			<name>JSONVar</name>
			<type>string</type>
			<required>Yes</required>
			<description>A string that contains a valid JSON construct, or variable that represents one.</description>
		</argument>
		<argument>
			<name>strictMapping</name>
			<type>boolean</type>
			<required>No</required>
			<description>A Boolean value that specifies whether to convert the JSON strictly</description>
		</argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- dollarFormat -->
	<function>
		<name>dollarFormat</name>
		<class>railo.runtime.functions.displayFormatting.DollarFormat</class>
		<description>Returns a formatted string of the number with 2 decimal points and thousand markers $000,000.00</description>
		<argument>
			<name>number</name>
			<type>string</type>
			<required>Yes</required>
		<description>Number to format</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- DotNetToCFType -->
	<function>
		<name>DotNetToCFType</name>
		<class>railo.runtime.functions.system.DotNetToCFType</class>
		<status>unimplemeted</status>
		<description>Explicitly converts a value returned by a .NET method to the corresponding ColdFusion data type.</description>
		<argument>
			<name>input</name>
			<type>any</type>
			<required>Yes</required>
			<description>Name of the .NET variable to convert</description>
		</argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- _javabaseddump -->
	<function>
		<name>_dump</name>
		<class>railo.runtime.functions.other.Dump</class>
		<status>hidden</status>
		<description>Use the dump function to display objects. Useful for debugging. You can display the contents of simple and complex variables, objects, components, user-defined functions, and other elements.</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>label</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>expand</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>show</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>hide</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>output</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>format</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>keys</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>metainfo</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>showUDFs</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- dump -->
	<function>
		<name>dump</name>
		<class>railo.runtime.functions.other.Dump</class>
		<description>Use the dump function to display objects. Useful for debugging. You can display the contents of simple and complex variables, objects, components, user-defined functions, and other elements.</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>label</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>expand</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>show</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>hide</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>output</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>format</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>keys</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>metainfo</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>showUDFs</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	
	<!-- dumpStruct -->
	<function>
		<name>dumpStruct</name>
		<class>railo.runtime.functions.other.DumpStruct</class>
		<description>creates out of given object dump infomration as struct</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>top</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>show</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>hide</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>keys</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>metainfo</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>showUDFs</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>label</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	
	<!-- duplicate -->
	<function>
		<name>duplicate</name>
		<class>railo.runtime.functions.struct.Duplicate</class>
		<description>Returns a new duplicated version of the given object, removing all references to the old one</description>
		<argument>
			<name>variable_name</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of a variable to duplicate</description>
    </argument>
		<argument>
			<name>deepcopy</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- cfusion_encrypt -->
	<function>
		<name>cfusion_encrypt</name>
		<class>railo.runtime.functions.other.CFusionEncrypt</class>
		<description>alias for function call encrypt(string,key,"cfmx_compat","hex")</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- cfusion_decrypt -->
	<function>
		<name>cfusion_decrypt</name>
		<class>railo.runtime.functions.other.CFusionDecrypt</class>
		<description>alias for function call decrypt(string,key,"cfmx_compat","hex")</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	
	<!-- encrypt -->
	<function>
		<name>encrypt</name>
		<class>railo.runtime.functions.other.Encrypt</class>
		<description>Encrypts the given string with the optional parameters</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String to encrypt.</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- encryptBinary -->
	<function>
		<name>encryptBinary</name>
		<class>railo.runtime.functions.other.EncryptBinary</class>
		<description>Encrypts the given binary with the optional parameters</description>
		<argument>
			<name>bytes</name>
			<type>any</type>
			<required>Yes</required>
		<description>Binary data to encrypt.</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- EntityDelete -->
	<function>
		<name>EntityDelete</name>
		<class>railo.runtime.functions.orm.EntityDelete</class>
		<description>Deletes the record from the database for the specified entity. Depending on the cascade attribute specified in the mapping, it deletes the associated objects also.</description>
		<argument>
			<name>name</name>
			<type>object</type>
			<required>Yes</required>
		<description>Name of the entity being deleted.</description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- EntityLoad -->
	<function>
		<name>entityLoad</name>
		<class>railo.runtime.functions.orm.EntityLoad</class>
		<description>Loads and returns an array of entities for the specified entity name. You can also specify a filter criteria and sort order. All EntityLoad methods take the entity name as input.</description>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description>Name of the entity to be loaded.</description>
    </argument>
		<argument>
			<name>idOrFilter</name>
			<type>any</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>uniqueOrOrder</name>
			<type>any</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>options</name>
			<type>any</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- EntityLoadByPK -->
	<function>
		<name>EntityLoadByPK</name>
		<class>railo.runtime.functions.orm.EntityLoadByPK</class>
		<description>Loads and returns an array of objects for the specified primary key. Use this function to avoid specifying the boolean parameter that you must specify with the EntityLoad() function.</description>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description>Name of the entity to be loaded.</description>
    </argument>
		<argument>
			<name>id</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>unique</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- EntityLoadByExample -->
	<function>
		<name>EntityLoadByExample</name>
		<class>railo.runtime.functions.orm.EntityLoadByExample</class>
		<description>Loads and returns an array of objects that match the sampleentity.The filter criteria is constructed by ANDing all the non-null properties of the sampleentity.</description>
		<argument>
			<name>sampleEntity</name>
			<type>object</type>
			<required>yes</required>
		<description>Name of the sample entity that is used to match and filter similar entities to load.</description>
    </argument>
		<argument>
			<name>unique</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- EntityMerge -->
	<function>
		<name>EntityMerge</name>
		<class>railo.runtime.functions.orm.EntityMerge</class>
		<description>Attaches the specified entity to the current ORM session. It copies the state of the given object onto the persistent object with the same identifier and returns the persistent object. </description>
		<argument>
			<name>entity</name>
			<type>any</type>
			<required>yes</required>
		<description>The entity that must be attached to the ORM session.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- EntityNew -->
	<function>
		<name>EntityNew</name>
		<class>railo.runtime.functions.orm.EntityNew</class>
		<description>Adds an entity instance to the existing data source</description>
		<argument>
			<name>entityName</name>
			<type>string</type>
			<required>yes</required>
		<description>Name of the instance being created.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- EntityNameArray -->
	<function>
		<name>EntityNameArray</name>
		<class>railo.runtime.functions.orm.EntityNameArray</class>
		<description>return all loaded entities as array</description>
		<return>
			<type>array</type>
		</return>
	</function>
	
	<!-- EntityNameList -->
	<function>
		<name>EntityNameList</name>
		<class>railo.runtime.functions.orm.EntityNameList</class>
		<description>return all loaded entities as string list</description>
		<argument>
			<name>delimeter</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- EntityReload -->
	<function>
		<name>EntityReload</name>
		<class>railo.runtime.functions.orm.EntityReload</class>
		<description>Reloads data for an entity that is already loaded. This method refetches data from the database and repopulates the entity with the refreshed data.</description>
		<argument>
			<name>entity</name>
			<type>object</type>
			<required>yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- EntitySave -->
	<function>
		<name>EntitySave</name>
		<class>railo.runtime.functions.orm.EntitySave</class>
		<description>Saves or updates data of the object and all related objects to the database. This also saves all the related entities, which includes the entire graph. 
		When entities are loaded, default constructors are called.Railo automatically tries to find if a new record should be inserted or an existing record be updated for the given entity. If you set forceinsert=true, then Railo tries to insert the entity as a new record.Calling this method may not run the insert or update SQL immediately. It is possible that various SQL statements are queued and then run as a batch for performance reasons. The SQL statements are run when the ORM session is flushed.</description>
		<argument>
			<name>entity</name>
			<type>object</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>forceInsert</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- EntityToQuery -->
	<function>
		<name>EntityToQuery</name>
		<class>railo.runtime.functions.orm.EntityToQuery</class>
		<description>Converts the input entity object or the input array of entity objects to a query object.</description>
		<argument>
			<name>entity</name>
			<type>object</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>query</type>
		</return>
	</function>
	
	
	
	
	<!-- evaluate -->
	<function>
		<name>evaluate</name>
		<class>railo.runtime.functions.dynamicEvaluation.Evaluate</class>
		<description>Evaluates the list of expressions, one by one.</description>
		<argument-type>dynamic</argument-type>
		<argument-min>1</argument-min>
		
		<!--
		<argument>
			<name>object_expression</name>
			<type>any</type>
			<required>Yes</required>
		</argument>
		-->
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- evaluateComponent -->
	<function>
		<name>evaluateComponent</name>
		<class>railo.runtime.functions.dynamicEvaluation.EvaluateComponent</class>
		<description>literal representation of a component, used by the serialize method.</description>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>md5</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>thisData</name>
			<type>struct</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>variablesData</name>
			<type>struct</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	
	<!-- evaluateJava -->
	<function>
		<name>evaluateJava</name>
		<class>railo.runtime.functions.dynamicEvaluation.EvaluateJava</class>
		<description>literal representation of a serializable Java Object, used by the serialize method.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	
	
	<!-- exp -->
	<function>
		<name>exp</name>
		<class>railo.runtime.functions.math.Exp</class>
		<description>Returns Euler's number e raised to the power of a double value</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Exponent to apply to the base e </description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- contractPath -->
	<function>
		<name>ContractPath</name>
		<class>railo.runtime.functions.system.ContractPath</class>
		<description>Does the opposite of the function expandPath(), tries to match given absolute path, to the mappings in the enviroment, when no mapping match, railo creates a relatie path from the current position,</description>
		<argument>
			<name>absolute_path</name>
			<type>string</type>
			<required>Yes</required>
			<description>a absolute path</description>
		</argument>
		<argument>
			<name>placeholder</name>
			<type>boolean</type>
			<required>No</required>
			<description>If true (default false), Railo also tries to create a placeholder for the begining of the Tag</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- expandPath -->
	<function>
		<name>expandPath</name>
		<class>railo.runtime.functions.system.ExpandPath</class>
		<description>Translates the given web path to a real file system path</description>
		<argument>
			<name>relative_path</name>
			<type>string</type>
			<required>Yes</required>
		<description>Relative or absolute directory reference or filename, within the current directory, (.\\ and ..\\) to convert to an absolute path. Can include forward or backward slashes.</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- extract -->
	<function>
		<name>extract</name>
		<class>railo.runtime.functions.system.Extract</class>
		<description>extract data out of a compressed file</description>
		<argument>
			<name>format</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			Format to extract (bzip,gzip,tar,tbz (tar bzip),tgz (tar gzip) and zip)
			</description>
		</argument>
		<argument>
			<name>source</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			source file or directory with zip files to extract
			</description>
		</argument>
		<argument>
			<name>target</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			name of the target directory
			</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	

	<!-- fileOpen -->
	<function>
		<name>fileOpen</name>
		<class>railo.runtime.functions.file.FileOpen</class>
		<description>Opens up the file at the given locatio for either reading or writing</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
		<description>a file path</description>
    </argument>
		<argument>
			<name>mode</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>charset</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>seekable</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- fileRead -->
	<function>
		<name>fileRead</name>
		<class>railo.runtime.functions.file.FileRead</class>
		<description>If a file object is passed in, will read the number of bytes given. If a path to a file name will read in the full file into memory. For reading text based files</description>
		<argument>
			<name>file</name>
			<type>any</type>
			<required>Yes</required>
			<description>file path or object</description>
		</argument>
		<argument>
			<name>charsetOrBufferSize</name>
			<type>any</type>
			<required>No</required>
			<description>the charset used or the size of the buffer.</description>
		</argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- fileReadLine -->
	<function>
		<name>fileReadLine</name>
		<class>railo.runtime.functions.file.FileReadLine</class>
		<description>For an existing open file, reads and returns the next line of text</description>
		<argument>
			<name>fileObj</name>
			<type>any</type>
			<required>Yes</required>
		<description>The file object</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- FileSeek -->
	<function>
		<name>FileSeek</name>
		<class>railo.runtime.functions.file.FileSeek</class>
		<description>Seeks the position for read or write operation of an file.</description>
		<argument>
			<name>fileObj</name>
			<type>any</type>
			<required>Yes</required>
		<description>The file object.</description>
    </argument>
		<argument>
			<name>pos</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- FileSkipBytes -->
	<function>
		<name>FileSkipBytes</name>
		<class>railo.runtime.functions.file.FileSkipBytes</class>
		<description>Skips over the data before a read or write operation of an file.</description>
		<argument>
			<name>fileObj</name>
			<type>any</type>
			<required>Yes</required>
		<description>The file object.</description>
    </argument>
		<argument>
			<name>len</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- fileClose -->
	<function>
		<name>fileClose</name>
		<class>railo.runtime.functions.file.FileClose</class>
		<description>For an existing open file, this function closes off all handles</description>
		<argument>
			<name>fileObj</name>
			<type>any</type>
			<required>Yes</required>
		<description>The file to close.</description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- fileCopy -->
	<function>
		<name>fileCopy</name>
		<class>railo.runtime.functions.file.FileCopy</class>
		<description>Makes a copy of the srcFile landing it in the destFile position. Must be a file path for the destination</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>path to copy.</description>
    </argument>
		<argument>
			<name>destination</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- fileCopy -->
	<function>
		<name>fileCopy</name>
		<class>railo.runtime.functions.file.FileCopy</class>
		<description>Makes a copy of the srcFile landing it in the destFile position. Must be a file path for the destination</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>file to copy</description>
    </argument>
		<argument>
			<name>destination</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- fileMove -->
	<function>
		<name>fileMove</name>
		<class>railo.runtime.functions.file.FileMove</class>
		<description>Moves a file from one location to another on the server.</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>file to move.</description>
    </argument>
		<argument>
			<name>destination</name>
			<type>any</type>
			<required>Yes</required>
			<description>Pathname of the destination directory or file. If not an absolute path, it is relative to the source directory.</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- FileDelete -->
	<function>
		<name>FileDelete</name>
		<class>railo.runtime.functions.file.FileDelete</class>
		<description>Deletes the file at the given location {supports Amazon S3}</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>file to delete.</description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- FileExists -->
	<function>
		<name>FileExists</name>
		<class>railo.runtime.functions.file.FileExists</class>
		<description>Determines if the file represented by the full path exists on the file system</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>a file path.</description>
    </argument>
		<argument>
			<name>allowRealPath</name>
			<type>boolean</type>
			<required>no</required>
			<description>defines if relative paths are interpreted or not</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	
	<!-- FileIsEOF -->
	<function>
		<name>FileIsEOF</name>
		<class>railo.runtime.functions.file.FileIsEOF</class>
		<description>For the given open file object, determines if it has reached the end of its file/stream</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>The file object.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- FileReadBinary -->
	<function>
		<name>FileReadBinary</name>
		<class>railo.runtime.functions.file.FileReadBinary</class>
		<description>Read the file at the path into memory. For use with binary files</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>file path</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- FileSetAccessMode -->
	<function>
		<name>FileSetAccessMode</name>
		<class>railo.runtime.functions.file.FileSetAccessMode</class>
		<description>For the given path, sets the file attributes {for *NIX systems only}</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>file path</description>
    </argument>
		<argument>
			<name>mode</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- FileSetAttribute -->
	<function>
		<name>FileSetAttribute</name>
		<class>railo.runtime.functions.file.FileSetAttribute</class>
		<description>For the given path, sets the file attributes {for Windows only}</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>file path</description>
    </argument>
		<argument>
			<name>attribute</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- FileSetLastModified -->
	<function>
		<name>FileSetLastModified</name>
		<class>railo.runtime.functions.file.FileSetLastModified</class>
		<description>For the given file, set the last modification date</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>file path</description>
    </argument>
		<argument>
			<name>date</name>
			<type>date</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- FileWrite -->
	<function>
		<name>FileWrite</name>
		<class>railo.runtime.functions.file.FileWrite</class>
		<description>If a file object is passed in, will write the object given. If a path to a file name will write the full data and close the file. For writing binary and test based files. Will append to an existing file.</description>
		<argument>
			<name>file</name>
			<type>any</type>
			<required>Yes</required>
			<description>file path or object</description>
		</argument>
		<argument>
			<name>data</name>
			<type>any</type>
			<required>Yes</required>
			<description>data o write to the file</description>
		</argument>
		<argument>
			<name>charset</name>
			<type>string</type>
			<required>no</required>
			<description>The character encoding in which the file contents is encoded.</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- FileWriteLine -->
	<function>
		<name>FileWriteLine</name>
		<class>railo.runtime.functions.file.FileWriteLine</class>
		<description>Opens up the file (or uses the existing file object) and appends the given line of text</description>
		<argument>
			<name>file</name>
			<type>any</type>
			<required>Yes</required>
			<description>the file object to which to write the line.</description>
		</argument>
		<argument>
			<name>data</name>
			<type>string</type>
			<required>Yes</required>
			<description>data to add to the file object.</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- find -->
	<function>
		<name>find</name>
		<class>railo.runtime.functions.string.Find</class>
		<description>Looks for the given substring in the string, starting optionally at the index position</description>
		<argument>
			<name>substring</name>
			<type>string</type>
			<required>Yes</required>
		<description>String for which to search.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description></description>
		</argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- findNoCase -->
	<function>
		<name>findNoCase</name>
		<class>railo.runtime.functions.string.FindNoCase</class>
		<description>Looks for the given substring in the string (case insensitive), starting optionally at the index position</description>
		<argument>
			<name>substring</name>
			<type>string</type>
			<required>Yes</required>
		<description>String for which to search.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- findOneOf -->
	<function>
		<name>findOneOf</name>
		<class>railo.runtime.functions.string.FindOneOf</class>
		<description>Looks for the given characters in the string, starting optionally at the index position</description>
		<argument>
			<name>set</name>
			<type>string</type>
			<required>Yes</required>
		<description>String that contains one or more characters to search for.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- firstDayOfMonth -->
	<function>
		<name>firstDayOfMonth</name>
		<class>railo.runtime.functions.dateTime.FirstDayOfMonth</class>
		<description>Returns the number of the day in the year, the first day of this month falls on</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>Date object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- fix -->
	<function>
		<name>fix</name>
		<class>railo.runtime.functions.math.Fix</class>
		<description>Returns the number associated with the value</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>A number</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- formatBaseN -->
	<function>
		<name>formatBaseN</name>
		<class>railo.runtime.functions.displayFormatting.FormatBaseN</class>
		<description>Converts the given number to the new given base</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Number to convert</description>
    </argument>
		<argument>
			<name>radix</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- GenerateSecretKey -->
	<function>
		<name>GenerateSecretKey</name>
		<class>railo.runtime.functions.conversion.GenerateSecretKey</class>
		<description>
		Generates a Secret Key
		</description>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>Yes</required>
		<description>The encryption algorithm for which to generate the key.</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getAuthUser -->
	<function>
		<name>getAuthUser</name>
		<class>railo.runtime.functions.other.GetAuthUser</class>
		<description>Returns the currently logged in authenicated user</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- GetApplicationSettings -->
	<function>
		<name>GetApplicationSettings</name>
		<class>railo.runtime.functions.system.GetApplicationSettings</class>
		<description>return all data from this scope, when using a application.cfc or all setting defined in tag cfapplication</description>
		<argument>
			<name>suppressFunction</name>
			<type>boolean</type>
			<required>no</required>
			<description>if true only data members from this sope are returned (no functions), default is false</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getBaseTagData -->
	<function>
		<name>getBaseTagData</name>
		<class>railo.runtime.functions.other.GetBaseTagData</class>
		<description>Returns back the data associated with the parent tag, at the given depth level back</description>
		<argument>
			<name>tagname</name>
			<type>string</type>
			<required>Yes</required>
		<description>Ancestor tag name for which to return data</description>
    </argument>
		<argument>
			<name>instancenumber</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getBaseTagList -->
	<function>
		<name>getBaseTagList</name>
		<class>railo.runtime.functions.other.GetBaseTagList</class>
		<description>Returns the list of all the parent tags upto the current point</description>
		<argument>
			<name>delimeter</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getBaseTemplatePath -->
	<function>
		<name>getBaseTemplatePath</name>
		<class>railo.runtime.functions.system.GetBaseTemplatePath</class>
		<description>Returns the filepath of the base template in this request</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getClassPath -->
	<function>
		<name>getClassPath</name>
		<class>railo.runtime.functions.system.GetClassPath</class>
		<description>returns a array containing the Java classpath of the current enviroment.</description>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- GetComponentMetaData -->
	<function>
		<name>GetComponentMetaData</name>
		<class>railo.runtime.functions.other.GetComponentMetaData</class>
		<description>Gets metadata (such as the functions and implemented interfaces of a component) for a CFC or Interface. </description>
		<argument>
			<name>pathOrCFC</name>
			<type>object</type>
			<required>yes</required>
			<description>path to a component or component itself</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- GetContextRoot -->
	<function>
		<name>getContextRoot</name>
		<class>railo.runtime.functions.system.GetContextRoot</class>
		<description>
		returns the root of this actuell Page Context
		</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getClientVariablesList -->
	<function>
		<name>getClientVariablesList</name>
		<class>railo.runtime.functions.other.GetClientVariablesList</class>
		<description>Returns back a string of all the non-read-only items in the current 'client' scope</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getCurrentTemplatePath -->
	<function>
		<name>getCurrentTemplatePath</name>
		<class>railo.runtime.functions.system.GetCurrentTemplatePath</class>
		<description>Returns the filepath of the current template</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getCurrentContext -->
	<function>
		<name>getCurrentContext</name>
		<class>railo.runtime.functions.system.GetCurrentContext</class>
		<description>return the context (stacktrace) of the current position.</description>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- getDirectoryFromPath -->
	<function>
		<name>getDirectoryFromPath</name>
		<class>railo.runtime.functions.system.GetDirectoryFromPath</class>
		<description>Returns the path only of the full path</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
		<description>file path</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getEncoding -->
	<function>
		<name>getEncoding</name>
		<class>railo.runtime.functions.international.GetEncoding</class>
		<description>Returns back the character encoding of the scope specified</description>
		<argument>
			<name>scope</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getException -->
	<function>
		<name>getException</name>
		<class>railo.runtime.functions.system.GetException</class>
		<description>Used with the cftry and cfcatch tags. Retrieves a Java exception object from a Java object. </description>
		<argument>
			<name>object</name>
			<type>any</type>
			<required>Yes</required>
		<description>A Java object.</description>
    </argument>
		<return>
			<type>throwable</type>
		</return>
	</function>
	<!-- getFileFromPath -->
	<function>
		<name>getFileFromPath</name>
		<class>railo.runtime.functions.file.GetFileFromPath</class>
		<description>Returns the filename only of the full path</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
		<description>file path</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- GetFileInfo -->
	<function>
		<name>GetFileInfo</name>
		<class>railo.runtime.functions.file.GetFileInfo</class>
		<description>Reads the file at the given path and returns back a structure of details (name, path, parent, size, lastmodified, canread, canwrite, ishidden, type)</description>
		<argument>
			<name>file</name>
			<type>any</type>
			<required>Yes</required>
		<description>file path</description>
    </argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getFunctionData (only railo)-->
	<function>
		<name>getFunctionData</name>
		<class>railo.runtime.functions.other.GetFunctionData</class>
		<description>returns information to a single function</description>
		<argument>
			<name>functionName</name>
			<type>string</type>
			<required>Yes</required>
			<description>name of the function getting information for</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- GetLocaleDisplayName -->
	<function>
		<name>getLocaleDisplayName</name>
		<class>railo.runtime.functions.displayFormatting.GetLocaleDisplayName</class>
		<description>Returns back the display name of the locale, optionally in the locale specfied</description>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description>The locale whose name you want.</description>
    </argument>
		<argument>
			<name>dspLocale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- GetLocalHostIP -->
	<function>
		<name>GetLocalHostIP</name>
		<class>railo.runtime.functions.system.GetLocalHostIP</class>
		<description>Returns local host label for this network</description>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- GetVFSMetaData -->
	<function>
		<name>GetVFSMetaData</name>
		<class>railo.runtime.functions.file.GetVFSMetaData</class>
		<description>Gets virtual file system metadata.</description>
		<argument>
			<name>scheme</name>
			<type>string</type>
			<required>yes</required>
			<description>the scheme of the virtual filesystem (ram,file,s3,http,https,zip,tar ...).</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	
	
	
	<!-- GetPrinterInfo -->
	<function>
		<name>GetPrinterInfo</name>
		<class>railo.runtime.functions.system.GetPrinterInfo</class>
		<description>Determines which print attributes are supported by a selected printer.</description>
		<argument>
			<name>printer</name>
			<type>string</type>
			<required>Yes</required>
			<description>The name of a printer</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getRailoId -->
	<function>
		<name>GetRailoId</name>
		<class>railo.runtime.functions.other.GetRailoId</class>
		<description>return ids of the current context</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- GetReadableImageFormats -->
	<function>
		<name>GetReadableImageFormats</name>
		<class>railo.runtime.functions.image.GetReadableImageFormats</class>
		<description>Returns a list of image formats that Railo can read on the operating system where Railo is deployed.</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- GetUserRoles -->
	<function>
		<name>GetUserRoles</name>
		<class>railo.runtime.functions.system.GetUserRoles</class>
		<description>Retrieves the list of roles for the current user.</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- GetWriteableImageFormats -->
	<function>
		<name>GetWriteableImageFormats</name>
		<class>railo.runtime.functions.image.GetWriteableImageFormats</class>
		<description>Returns a list of image formats that Railo can write on the operating system where Railo is deployed.</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getTagData-->
	<function>
		<name>getTagData</name>
		<class>railo.runtime.functions.other.GetTagData</class>
		<description>return information to a Tag as Struct</description>
		<argument>
			<name>nameSpaceWithSeperator</name>
			<type>string</type>
			<required>Yes</required>
			<description>The namesapce of the tag with the seperator Example: cf, rc: aso.</description>
		</argument>
		<argument>
			<name>tagName</name>
			<type>string</type>
			<required>Yes</required>
			<description>The tag name without namespace Example: login,mail aso.</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getFunctionList -->
	<function>
		<name>getFunctionList</name>
		<class>railo.runtime.functions.other.GetFunctionList</class>
		<description>Returns all the currently registered functions</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- GetGatewayHelper -->
	<function>
		<name>getGatewayHelper</name>
		<class>railo.runtime.functions.gateway.GetGatewayHelper</class>
		<description>Gets a Java GatewayHelper object that provides methods and properties for use with a event gateways.</description>
		<argument>
			<name>gatewayID</name>
			<type>string</type>
			<required>Yes</required>
		<description>Identifier of the gateway that provides the GatewayHelper object.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- getTagList (only railo) -->
	<function>
		<name>getTagList</name>
		<class>railo.runtime.functions.other.GetTagList</class>
		<description>
		returns information to a tag as struct
		</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getHTTPRequestData -->
	<function>
		<name>getHTTPRequestData</name>
		<class>railo.runtime.functions.other.GetHTTPRequestData</class>
		<description>Returns back a structure describing the current request; method, protocol, content, headers</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getHttpTimeString -->
	<function>
		<name>getHttpTimeString</name>
		<class>railo.runtime.functions.dateTime.GetHttpTimeString</class>
		<description>Returns back the time given (or the current time) in the format of the HTTP header</description>
		<argument>
			<name>date_time_object</name>
			<type>datetime</type>
			<required>No</required>
		<description>A date-time value</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getK2ServerDocCount (Deprecated) -->
	<function>
		<name>getK2ServerDocCount</name>
		<class>railo.runtime.functions.other.GetK2ServerDocCount</class>
		<status>deprecated</status>
		<description>This function is deprecated. </description>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- getK2ServerDocCountLimit (Deprecated) -->
	<function>
		<name>getK2ServerDocCountLimit</name>
		<class>railo.runtime.functions.other.GetK2ServerDocCountLimit</class>
		<status>deprecated</status>
		<description>This function is deprecated.</description>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- getLocale -->
	<function>
		<name>getLocale</name>
		<class>railo.runtime.functions.international.GetLocale</class>
		<description>Returns the current locale</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getMetadata -->
	<function>
		<name>getMetadata</name>
		<class>railo.runtime.functions.other.GetMetaData</class>
		<description>Returns back meta information depending on the object passed in</description>
		<argument>
			<name>object</name>
			<type>any</type>
			<required>No</required>
			<description>A component, user-defined function, query object, XML, ... . Within a CFC, the parameter can also specify the This scope</description>
		</argument>
		<argument>
			<name>source</name>
			<type>boolean</type>
			<required>No</required>
			<description>return information of the source of the object</description>
		</argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- getMetricData (depreceated) -->
	<function>
		<name>getMetricData</name>
		<class>railo.runtime.functions.system.GetMetricData</class>
		<description>Gets server performance metrics.</description>
		<argument>
			<name>monitor_name</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- getNumericDate -->
	<function>
		<name>getNumericDate</name>
		<class>railo.runtime.functions.other.GetNumericDate</class>
		<description>Returns a real number whose integer part represents the number of days since the EPOCH and whose fractional part represents the time value expressed in hours then divided by 24</description>
		<argument>
			<name>arg1</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- getPageContext -->
	<function>
		<name>getPageContext</name>
		<class>railo.runtime.functions.other.GetPageContext</class>
		<description>Returns the current underlying Java request context object</description>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- getProfileSections -->
	<function>
		<name>getProfileSections</name>
		<class>railo.runtime.functions.other.GetProfileSections</class>
		<description>Returns the sections within the INI file as a structure</description>
		<argument>
			<name>iniFile</name>
			<type>string</type>
			<required>Yes</required>
			<description>path to a ini file.</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getProfileString -->
	<function>
		<name>getProfileString</name>
		<class>railo.runtime.functions.system.GetProfileString</class>
		<description>Returns given property within the INI file given</description>
		<argument>
			<name>iniPath</name>
			<type>string</type>
			<required>Yes</required>
		<description>Absolute path (drive, directory, filename, extension) of initialization file; for example, C:\\boot.ini</description>
    </argument>
		<argument>
			<name>section</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>entry</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- GetSOAPRequest -->
	<function>
		<name>getSOAPRequest</name>
		<class>railo.runtime.functions.xml.GetSOAPRequest</class>
		<description>Returns back the original SOAP request for this object, or the current one if processing.</description>
		<argument>
			<name>webservice</name>
			<type>any</type>
			<required>Yes</required>
		<description>A webservice object as returned from the cfobject tag or the CreateObject function.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- GetSOAPRequestHeader -->
	<function>
		<name>getSOAPRequestHeader</name>
		<class>railo.runtime.functions.xml.GetSOAPRequestHeader</class>
		<description>Returns back the SOAP header request. Use only inside a WebServices call</description>
		<argument>
			<name>namespace</name>
			<type>string</type>
			<required>Yes</required>
		<description>A String that is the namespace for the header.</description>
    </argument>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>asXML</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
		
	<!-- GetSOAPResponse -->
	<function>
		<name>getSOAPResponse</name>
		<class>railo.runtime.functions.xml.GetSOAPResponse</class>
		<description>Returns back the full SOAP response</description>
		<argument>
			<name>webservice</name>
			<type>any</type>
			<required>Yes</required>
		<description>A webservice object as returned from the cfobject tag or the CreateObject function.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>

	<!-- GetSOAPResponseHeader -->
	<function>
		<name>getSOAPResponseHeader</name>
		<class>railo.runtime.functions.xml.GetSOAPResponseHeader</class>
		<description>Returns back the SOAP header response</description>
		<argument>
			<name>webservice</name>
			<type>any</type>
			<required>Yes</required>
		<description>A webservice object as returned from the cfobject tag or the CreateObject function.</description>
    </argument>
		<argument>
			<name>namespace</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>asXML</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- getTempDirectory -->
	<function>
		<name>getTempDirectory</name>
		<class>railo.runtime.functions.system.GetTempDirectory</class>
		<description>Returns the full path to the currently assigned temporary directory</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- GetSystemInfo
	<function>
		<name>GetSystemInfo</name>
		<class>railo.runtime.functions.system.GetSystemInfo</class>
		<status>deprecated</status>
		<description>This function is deprecated. </description>
		<return>
			<type>struct</type>
		</return>
	</function>
	 -->
	<!-- getTempFile -->
	<function>
		<name>getTempFile</name>
		<class>railo.runtime.functions.system.GetTempFile</class>
		<description>Creates a new unique file in the given directory with the prefix. Extension of the new file is '.tmp'</description>
		<argument>
			<name>dir</name>
			<type>string</type>
			<required>Yes</required>
		<description>Directory name</description>
    </argument>
		<argument>
			<name>prefix</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getTemplatePath -->
	<function>
		<name>getTemplatePath</name>
		<class>railo.runtime.functions.system.GetTemplatePath</class>
		<description>Returns the filepath of the base template in this request</description>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- getTickCount -->
	<function>
		<name>getTickCount</name>
		<class>railo.runtime.functions.other.GetTickCount</class>
		<description>Returns the number of milliseconds since the start of the application server</description>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- getTimeZoneInfo -->
	<function>
		<name>getTimeZoneInfo</name>
		<class>railo.runtime.functions.international.GetTimeZoneInfo</class>
		<description>Returns back a structure regarding the current timezone; utctotaloffset, utchouroffset, utcminuteoffset, isdston</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- getTimeZone -->
	<function>
		<name>getTimeZone</name>
		<class>railo.runtime.functions.dateTime.GetTimeZone</class>
		<description>returns the timezone defined for the current request.</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- setTimeZone -->
	<function>
		<name>setTimeZone</name>
		<class>railo.runtime.functions.dateTime.SetTimeZone</class>
		<description>change the timezone defintion for the current request.</description>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>Yes</required>
		<description>the timezone to be set.</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getToken -->
	<function>
		<name>getToken</name>
		<class>railo.runtime.functions.string.GetToken</class>
		<description>Returns the token at the given position</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String in which to search. </description>
    </argument>
		<argument>
			<name>index</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- getVariable -->
	<function>
		<name>getVariable</name>
		<class>railo.runtime.functions.dynamicEvaluation.GetVariable</class>
		<description>Gets the variable referenced by the given parameter; may be fully qualified</description>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- hash -->
	<function>
		<name>hash</name>
		<class>railo.runtime.functions.string.Hash</class>
		<description>Determines the hash of the given string (or binary object) using the current encoding and algorithm</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String to hash.</description>
    </argument>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- hour -->
	<function>
		<name>hour</name>
		<class>railo.runtime.functions.dateTime.Hour</class>
		<description>Returns the hour of the referenced by the date in 24 hour format</description>
		<argument>
			<name>Date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>Date object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- hTMLCodeFormat -->
	<function>
		<name>hTMLCodeFormat</name>
		<class>railo.runtime.functions.displayFormatting.HTMLCodeFormat</class>
		<description>Wraps the given string inside of the HTML &lt;pre&gt; .. &lt;/pre&gt; tags, escaping the string accordingly</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one.</description>
    </argument>
		<argument>
			<name>version</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>version</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- hTMLEditFormat -->
	<function>
		<name>hTMLEditFormat</name>
		<class>railo.runtime.functions.displayFormatting.HTMLEditFormat</class>
		<description>Escapes the given HTML string, replacing &amp;, &lt;, &gt;, and quotes. For use inside of the HTML form elements</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one.</description>
    </argument>
		<argument>
			<name>version</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- iIf -->
	<function>
		<name>iIf</name>
		<class>railo.runtime.functions.dynamicEvaluation.IIf</class>
		<description>Evaluates the list of expressions, one by one.</description>
		<argument>
			<name>condition</name>
			<type>boolean</type>
			<required>Yes</required>
		<description>An expression that can be evaluated as a Boolean.</description>
    </argument>
		<argument>
			<name>string_expression1</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>string_expression2</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- ImageAddBorder -->
	<function>
		<name>ImageAddBorder</name>
		<class>railo.runtime.functions.image.ImageAddBorder</class>
		<description>Adds a rectangular border around the outside edge of a image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>thickness</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>color</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>borderType</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageBlur -->
	<function>
		<name>ImageBlur</name>
		<class>railo.runtime.functions.image.ImageBlur</class>
		<description>Smooths image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>blurRadius</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageClearRect -->
	<function>
		<name>ImageClearRect</name>
		<class>railo.runtime.functions.image.ImageClearRect</class>
		<description>Clears the specified rectangle by filling it with the background color of the current drawing surface.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageCopy -->
	<function>
		<name>ImageCopy</name>
		<class>railo.runtime.functions.image.ImageCopy</class>
		<description>Copies a rectangular area of an image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>dx</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>dy</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageCrop -->
	<function>
		<name>ImageCrop</name>
		<class>railo.runtime.functions.image.ImageCrop</class>
		<description>Crops a image to a specified rectangular area.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawArc -->
	<function>
		<name>ImageDrawArc</name>
		<class>railo.runtime.functions.image.ImageDrawArc</class>
		<description>Draws a circular or elliptical arc.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>startAngle</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>arcAngle</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>filled</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawBeveledRect -->
	<function>
		<name>ImageDrawBeveledRect</name>
		<class>railo.runtime.functions.image.ImageDrawBeveledRect</class>
		<description>Draws a rectangle with beveled edges.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>raised</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>filled</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawCubicCurve -->
	<function>
		<name>ImageDrawCubicCurve</name>
		<class>railo.runtime.functions.image.ImageDrawCubicCurve</class>
		<description>Draws a cubic curve.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>ctrlx1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>ctrly1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>ctrlx2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>ctrly2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>x2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	<!-- ImageDrawImage -->
	<function>
		<name>ImageDrawImage</name>
		<class>railo.runtime.functions.image.ImageDrawImage</class>
		<description>Draws a image on a image with the baseline of the first character positioned at (x,y) in the image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>image</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<!-- <argument>
			<name>width</name>
			<type>number</type>
			<required>no</required>
		</argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>no</required>
		</argument> -->
		<return>
			<type>void</type>
		</return>
	</function>
	
	
	
	
	
	
	<!-- ImageDrawLine -->
	<function>
		<name>ImageDrawLine</name>
		<class>railo.runtime.functions.image.ImageDrawLine</class>
		<description>Draws a single line defined by two sets of x and y coordinates on a image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>x2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawLines -->
	<function>
		<name>ImageDrawLines</name>
		<class>railo.runtime.functions.image.ImageDrawLines</class>
		<description>Draws a sequence of connected lines defined by arrays of x and y coordinates.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>xcoords</name>
			<type>array</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>ycoords</name>
			<type>array</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>isPolygon</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>filled</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawOval -->
	<function>
		<name>ImageDrawOval</name>
		<class>railo.runtime.functions.image.ImageDrawOval</class>
		<description>Draws an oval.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>filled</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawPoint -->
	<function>
		<name>ImageDrawPoint</name>
		<class>railo.runtime.functions.image.ImageDrawPoint</class>
		<description>Draws a point at the specified (x,y) coordinate</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawQuadraticCurve -->
	<function>
		<name>ImageDrawQuadraticCurve</name>
		<class>railo.runtime.functions.image.ImageDrawQuadraticCurve</class>
		<description>Draws a curved line. The curve is controlled by a single point.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y1</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>ctrlx</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>ctrly</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>x2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y2</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawRect -->
	<function>
		<name>ImageDrawRect</name>
		<class>railo.runtime.functions.image.ImageDrawRect</class>
		<description>Draws a rectangle.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>filled</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawRoundRect -->
	<function>
		<name>ImageDrawRoundRect</name>
		<class>railo.runtime.functions.image.ImageDrawRoundRect</class>
		<description>Draws a rectangle.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>width</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>arcWidth</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>arcHeight</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>filled</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageDrawText -->
	<function>
		<name>ImageDrawText</name>
		<class>railo.runtime.functions.image.ImageDrawText</class>
		<description>Draws a text string on a image with the baseline of the first character positioned at (x,y) in the image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>str</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>attributeCollection</name>
			<type>struct</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageFlip -->
	<function>
		<name>ImageFlip</name>
		<class>railo.runtime.functions.image.ImageFlip</class>
		<description>Flips an image across an axis.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>transpose</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageGetBlob -->
	<function>
		<name>ImageGetBlob</name>
		<class>railo.runtime.functions.image.ImageGetBlob</class>
		<description>Retrieves the bytes of the underlying image. The bytes are in the same image format as the source image.</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageGetBufferedImage -->
	<function>
		<name>ImageGetBufferedImage</name>
		<class>railo.runtime.functions.image.ImageGetBufferedImage</class>
		<description>Returns the java.awt.BufferedImage object underlying the current image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageGetEXIFTag -->
	<function>
		<name>ImageGetEXIFTag</name>
		<class>railo.runtime.functions.image.ImageGetEXIFTag</class>
		<description>Retrieves the specified EXIF tag in an image</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>tagName</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageGetHeight -->
	<function>
		<name>ImageGetHeight</name>
		<class>railo.runtime.functions.image.ImageGetHeight</class>
		<description>Retrieves the height of the image in pixels.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- ImageGetWidth -->
	<function>
		<name>ImageGetWidth</name>
		<class>railo.runtime.functions.image.ImageGetWidth</class>
		<description>Retrieves the width of the image in pixels.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- ImageGetIPTCTag -->
	<function>
		<name>ImageGetIPTCTag</name>
		<class>railo.runtime.functions.image.ImageGetIPTCTag</class>
		<description>Retrieves the value of the IPTC tag for a image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>tagName</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageGrayscale -->
	<function>
		<name>ImageGrayscale</name>
		<class>railo.runtime.functions.image.ImageGrayscale</class>
		<description>Converts a image to grayscale.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageFormats -->
	<function>
		<name>ImageFormats</name>
		<class>railo.runtime.functions.image.ImageFormats</class>
		<description>return all available readers and writers</description>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- ImageFonts -->
	<function>
		<name>ImageFonts</name>
		<class>railo.runtime.functions.image.ImageFonts</class>
		<description>return all available</description>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- ImageInfo -->
	<function>
		<name>ImageInfo</name>
		<class>railo.runtime.functions.image.ImageInfo</class>
		<description>Returns a structure that contains information about the image, such as height, width, color model, size, and filename.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- ImageNegative -->
	<function>
		<name>ImageNegative</name>
		<class>railo.runtime.functions.image.ImageNegative</class>
		<description>Inverts the pixel values of a image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageNew -->
	<function>
		<name>ImageNew</name>
		<class>railo.runtime.functions.image.ImageNew</class>
		<description>Creates a image.</description>
		<argument>
			<name>source</name>
			<type>any</type>
			<required>no</required>
		<description>The source image path, URL, a variable that is read into the new image, or a Java buffered image.</description>
    </argument>
		<argument>
			<name>width</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>imageType</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>canvasColor</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageOverlay -->
	<function>
		<name>ImageOverlay</name>
		<class>railo.runtime.functions.image.ImageOverlay</class>
		<description>Reads two source images and overlays the second source image on the first source image.</description>
		<argument>
			<name>source1</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image that is the bottom layer in the image.</description>
    </argument>
		<argument>
			<name>source2</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImagePaste -->
	<function>
		<name>ImagePaste</name>
		<class>railo.runtime.functions.image.ImagePaste</class>
		<description>Takes two images and an (x,y) coordinate and draws the second image over the first image with the upper-left corner at coordinate (x,y).</description>
		<argument>
			<name>image1</name>
			<type>any</type>
			<required>Yes</required>
		<description>The bottom image.</description>
    </argument>
		<argument>
			<name>image2</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageReadBase64 -->
	<function>
		<name>ImageReadBase64</name>
		<class>railo.runtime.functions.image.ImageReadBase64</class>
		<description>Creates a image from a Base64 string.</description>
		<argument>
			<name>b64str</name>
			<type>string</type>
			<required>Yes</required>
		<description>a variable or Base64 string.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageRead -->
	<function>
		<name>ImageRead</name>
		<class>railo.runtime.functions.image.ImageRead</class>
		<description>Reads the source pathname or URL and creates a image.</description>
		<argument>
			<name>path</name>
			<type>any</type>
			<required>Yes</required>
		<description>On-disk or in-memory pathname or URL of the source image.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ImageResize -->
	<function>
		<name>ImageResize</name>
		<class>railo.runtime.functions.image.ImageResize</class>
		<description>Resizes a image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>width</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>height</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>interpolation</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>blurFactor</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageRotate -->
	<function>
		<name>ImageRotate</name>
		<class>railo.runtime.functions.image.ImageRotate</class>
		<description>Rotates a image at a specified point by a specified angle.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>angle</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>interpolation</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageRotateDrawingAxis -->
	<function>
		<name>ImageRotateDrawingAxis</name>
		<class>railo.runtime.functions.image.ImageRotateDrawingAxis</class>
		<description>Rotates all subsequent drawing on a image at a specified point by a specified angle.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>angle</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageScaleToFit -->
	<function>
		<name>ImageScaleToFit</name>
		<class>railo.runtime.functions.image.ImageScaleToFit</class>
		<description>Creates a resized image with the aspect ratio maintained.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>fitWidth</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>fitHeight</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>interpolation</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>blurFactor</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageWrite -->
	<function>
		<name>ImageWrite</name>
		<class>railo.runtime.functions.image.ImageWrite</class>
		<description>Writes a image to the specified filename or destination.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>destination</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>quality</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageWriteBase64 -->
	<function>
		<name>ImageWriteBase64</name>
		<class>railo.runtime.functions.image.ImageWriteBase64</class>
		<description>Writes Base64 images to the specified filename and destination.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>destination</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>format</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>inHTMLFormat</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- ImageSetAntialiasing -->
	<function>
		<name>ImageSetAntialiasing</name>
		<class>railo.runtime.functions.image.ImageSetAntialiasing</class>
		<description>Switches antialiasing on or off in rendered graphics.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>antialias</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageSetBackgroundColor -->
	<function>
		<name>ImageSetBackgroundColor</name>
		<class>railo.runtime.functions.image.ImageSetBackgroundColor</class>
		<description>Sets the background color for the image. 
			The background color is used for clearing a region. 
			Setting the background color only affects the subsequent ImageClearRect calls.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>color</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageSetDrawingAlpha -->
	<function>
		<name>ImageSetDrawingAlpha</name>
		<class>railo.runtime.functions.image.ImageSetDrawingAlpha</class>
		<description>Sets the current drawing alpha for images. All subsequent graphics operations use the specified alpha.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>alpha</name>
			<type>number</type>
			<required>yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageSetDrawingColor -->
	<function>
		<name>ImageSetDrawingColor</name>
		<class>railo.runtime.functions.image.ImageSetDrawingColor</class>
		<description>Sets the current drawing color for images. All subsequent graphics operations use the specified color.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>color</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageSetDrawingStroke -->
	<function>
		<name>ImageSetDrawingStroke</name>
		<class>railo.runtime.functions.image.ImageSetDrawingStroke</class>
		<description>Sets the drawing stroke for points and lines in subsequent images.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>attributeCollection</name>
			<type>struct</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageSetDrawingTransparency -->
	<function>
		<name>ImageSetDrawingTransparency</name>
		<class>railo.runtime.functions.image.ImageSetDrawingTransparency</class>
		<description>Specifies the degree of transparency of drawing functions.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>percent</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageSharpen -->
	<function>
		<name>ImageSharpen</name>
		<class>railo.runtime.functions.image.ImageSharpen</class>
		<description>Sharpens a image by using the unsharp mask filter.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>gain</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageShear -->
	<function>
		<name>ImageShear</name>
		<class>railo.runtime.functions.image.ImageShear</class>
		<description>Shears an image either horizontally or vertically. 
		For each pixel (x, y) of the destination, 
		the source value at the fractional subpixel position (x', y') is constructed by means of 
		an Interpolation object and written to the destination.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>shear</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>direction</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>interpolation</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageShearDrawingAxis -->
	<function>
		<name>ImageShearDrawingAxis</name>
		<class>railo.runtime.functions.image.ImageShearDrawingAxis</class>
		<description>Shears the drawing canvas.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>shx</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>shy</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageTranslate -->
	<function>
		<name>ImageTranslate</name>
		<class>railo.runtime.functions.image.ImageTranslate</class>
		<description>Copies an image to a new location on the plane.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>xTrans</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>yTrans</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>interpolation</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageTranslateDrawingAxis -->
	<function>
		<name>ImageTranslateDrawingAxis</name>
		<class>railo.runtime.functions.image.ImageTranslateDrawingAxis</class>
		<description>Translates the origin of the image context to the point (x,y) in the current coordinate system. 
		Modifies the image context so that its new origin corresponds to the point (x,y) in the image's original coordinate system.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>x</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>y</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ImageXORDrawingMode -->
	<function>
		<name>ImageXORDrawingMode</name>
		<class>railo.runtime.functions.image.ImageXORDrawingMode</class>
		<description>Sets the paint mode of the image to alternate between the image's current color and the new specified color.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The image on which this operation is performed.</description>
    </argument>
		<argument>
			<name>color</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	
	
	<!-- IntergralContext -->
	<function>
		<name>IntergralContext</name>
		<class>railo.runtime.functions.other.IntergralContext</class>
		<description>return the integral context information, FusionDebug has do be installed for this.</description>
		
		<return>
			<type>struct</type>
		</return>
	</function>
	
	<!-- IsImage -->
	<function>
		<name>IsImage</name>
		<class>railo.runtime.functions.image.IsImage</class>
		<description>Determines whether a variable returns a image.</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>The variable that is checked.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsImageFile -->
	<function>
		<name>IsImageFile</name>
		<class>railo.runtime.functions.image.IsImageFile</class>
		<description>Verifies whether an image file is valid.</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
		<description>The pathname of the file to be checked. The pathname can be absolute or relative to the CFM page and must be enclosed in quotation marks.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsJson -->
	<function>
		<name>IsJson</name>
		<class>railo.runtime.functions.conversion.IsJSON</class>
		<description>Evaluates whether a string is in valid JSON (JavaScript Object Notation) data interchange format</description>
		<argument>
			<name>var</name>
			<type>any</type>
			<required>Yes</required>
		<description>A string or variable that represents one.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsIPv6 -->
	<function>
		<name>IsIPv6</name>
		<class>railo.runtime.functions.decision.IsIPv6</class>
		<description>Determines whether the host supports IPv6.</description>
		<argument>
			<name>hostname</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	
	
	<!-- IsPDFFile -->
	<function>
		<name>IsPDFFile</name>
		<class>railo.runtime.functions.decision.IsPDFFile</class>
		<description>Verifies whether a PDF file is valid.</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
		<description>Pathname to a PDF file. The pathname can be absolute or relative to the CFM page and must be enclosed in quotation marks.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsPDFObject -->
	<function>
		<name>IsPDFObject</name>
		<class>railo.runtime.functions.decision.IsPDFObject</class>
		<description>Determines whether a value is a PDF object.</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>A value, typically the PDF object stored as a variable name.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsZipFile -->
	<function>
		<name>IsZipFile</name>
		<class>railo.runtime.functions.system.IsZipFile</class>
		<description>Verifies whether an zip file is valid.</description>
		<argument>
			<name>path</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	
	
	
	<!-- incrementValue -->
	<function>
		<name>incrementValue</name>
		<class>railo.runtime.functions.math.IncrementValue</class>
		<description>Increments the current number by one</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Number to increment</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- inputBaseN -->
	<function>
		<name>inputBaseN</name>
		<class>railo.runtime.functions.math.InputBaseN</class>
		<description>Attempts to convert the string specified, using the radix, to a number</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String that represents a number, in the base specified by radix.</description>
    </argument>
		<argument>
			<name>radix</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- insert -->
	<function>
		<name>insert</name>
		<class>railo.runtime.functions.string.Insert</class>
		<description>Inserts the substring into the given string at the given position</description>
		<argument>
			<name>substring</name>
			<type>string</type>
			<required>Yes</required>
		<description>String to insert.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>position</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- int -->
	<function>
		<name>int</name>
		<class>railo.runtime.functions.math.Int</class>
		<description>Returns the largest (closest to positive infinity) double value that is less than or equal to the argument and is equal to a mathematical integer</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Real number to round down to an integer.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- isArray -->
	<function>
		<name>isArray</name>
		<class>railo.runtime.functions.decision.IsArray</class>
		<description>Determines if the object is a an array or xml object</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Variable or array name</description>
    </argument>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isBinary -->
	<function>
		<name>isBinary</name>
		<class>railo.runtime.functions.decision.IsBinary</class>
		<description>Determines if the object is a binary object</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Number or string</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isBoolean -->
	<function>
		<name>isBoolean</name>
		<class>railo.runtime.functions.decision.IsBoolean</class>
		<description>Determines if the object represents a boolean value</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Number or string</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isCustomFunction -->
	<function>
		<name>isCustomFunction</name>
		<class>railo.runtime.functions.decision.IsCustomFunction</class>
		<description>Determines if the object represents a user defined function</description>
		<argument>
			<name>name</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of a custom function. Must not be in quotation marks. If not a defined variable or function name, Railo generates an error.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isDate -->
	<function>
		<name>isDate</name>
		<class>railo.runtime.functions.decision.IsDate</class>
		<description>Determines if the object is a date object</description>
		<argument>
			<name>string</name>
			<type>any</type>
			<required>Yes</required>
		<description>A string or a variable that contains one. </description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsDDX -->
	<function>
		<name>IsDDX</name>
		<class>railo.runtime.functions.decision.IsDDX</class>
		<description>Determines whether a DDX file exists and is valid, or if a string contains valid DDX instructions.</description>
		<argument>
			<name>pathOrString</name>
			<type>string</type>
			<required>Yes</required>
		<description>Pathname to the DDX file or a string of DDX instructions. The pathname can be absolute or relative to the CFM page that calls it and must be enclosed in quotation marks.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsInstanceOf -->
	<function>
		<name>IsInstanceOf</name>
		<class>railo.runtime.functions.decision.IsInstanceOf</class>
		<description>Determines if the object passed in is an instance of the type passed in</description>
		<argument>
			<name>obj</name>
			<type>any</type>
			<required>Yes</required>
		<description>The CFC instance or Java object that you are testing</description>
    </argument>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	
	<!-- isDebugMode -->
	<function>
		<name>isDebugMode</name>
		<class>railo.runtime.functions.decision.IsDebugMode</class>
		<description>Determines if debug mode has been enabled</description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isDefined -->
	<function>
		<name>isDefined</name>
		<class>railo.runtime.functions.decision.IsDefined</class>
		<tte-class>railo.transformer.cfml.evaluator.func.impl.IsDefined</tte-class>
		<description>Determines if the string represents a defined variable</description>
		<argument>
			<name>variable</name>
			<type>string</type>
			<required>Yes</required>
		<description>String, enclosed in quotation marks. Name of variable to test for.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isK2ServerABroker (Deprecated) -->
	<function>
		<name>isK2ServerABroker</name>
		<class>railo.runtime.functions.decision.IsK2ServerABroker</class>
		<status>deprecated</status>
		<description>This function is deprecated. </description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isK2ServerDocCountExceeded  (Deprecated)-->
	<function>
		<name>isK2ServerDocCountExceeded</name>
		<class>railo.runtime.functions.decision.IsK2ServerDocCountExceeded</class>
			<status>deprecated</status>
		<description>This function is deprecated. </description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isK2ServerOnline (Deprecated) -->
	<function>
		<name>isK2ServerOnline</name>
		<class>railo.runtime.functions.decision.IsK2ServerOnline</class>
			<status>deprecated</status>
		<description>This function is deprecated.</description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isLeapYear -->
	<function>
		<name>isLeapYear</name>
		<class>railo.runtime.functions.decision.IsLeapYear</class>
		<description>Determines if the given date object ocurrs on a leap year</description>
		<argument>
			<name>year</name>
			<type>number</type>
			<required>Yes</required>
		<description>Number representing a year</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isLocalHost -->
	<function>
		<name>isLocalHost</name>
		<class>railo.runtime.functions.decision.IsLocalHost</class>
		<description>Determines if the string represents a the localhost ('127.0.0.1', '::1', or 'localhost')</description>
		<argument>
			<name>ip</name>
			<type>String</type>
			<required>Yes</required>
		<description>Valid IP address.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>

	<!-- isNotMap -->
	<function>
		<name>isNotMap</name>
		<class>railo.runtime.functions.other.IsNotMap</class>
		<description>return true if the given Object is not of Type java.util.Map</description>
		<argument>
			<name>arg1</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isNull -->
	<function>
		<name>isNull</name>
		<class>railo.runtime.functions.other.IsNull</class>
		<tte-class>railo.transformer.cfml.evaluator.func.impl.IsNull</tte-class>
		<description>Determines if the object represents a NULL value</description>
		<argument>
			<name>object</name>
			<type>any</type>
			<required>Yes</required>
		<description>Object for which you perform the null check. </description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isNumeric -->
	<function>
		<name>isNumeric</name>
		<class>railo.runtime.functions.decision.IsNumeric</class>
		<description>Determines if the object represents a numeric</description>
		<argument>
			<name>string</name>
			<type>any</type>
			<required>Yes</required>
		<description>A string or a variable that contains one. </description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isNumericDate -->
	<function>
		<name>isNumericDate</name>
		<class>railo.runtime.functions.decision.IsNumericDate</class>
		<description>Determines if the object represents a numeric date</description>
		<argument>
			<name>number</name>
			<type>any</type>
			<required>Yes</required>
		<description>A real number</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isObject -->
	<function>
		<name>isObject</name>
		<class>railo.runtime.functions.decision.IsObject</class>
		<description>Determines if the object represents a CFC or Java object</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>A value, typically the name of a variable.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isQuery -->
	<function>
		<name>isQuery</name>
		<class>railo.runtime.functions.query.IsQuery</class>
		<description>Determines if the object represents a query</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Query variable</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isSimpleValue -->
	<function>
		<name>isSimpleValue</name>
		<class>railo.runtime.functions.decision.IsSimpleValue</class>
		<description>Determines if the object represents a simple value like a string, number, boolean etc</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Variable or expression</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsSOAPRequest -->
	<function>
		<name>IsSOAPRequest</name>
		<class>railo.runtime.functions.decision.IsSOAPRequest</class>
		<description>
		Returns if actuell call of a CFC is a Request via Webservice
		</description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isStruct -->
	<function>
		<name>isStruct</name>
		<class>railo.runtime.functions.struct.IsStruct</class>
		<description>Determines if the object is a structure</description>
		<argument>
			<name>variable</name>
			<type>any</type>
			<required>Yes</required>
		<description>Variable name</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isUserInRole -->
	<function>
		<name>isUserInRole</name>
		<class>railo.runtime.functions.decision.IsUserInRole</class>
		<description>Determines if the user specified is logged in (CFLOGINUSER)</description>
		<argument>
			<name>role_name</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of a security role</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isUserInAnyRole -->
	<function>
		<name>isUserInAnyRole</name>
		<class>railo.runtime.functions.decision.isUserInAnyRole</class>
		<description>Determines whether an authenticated user belongs to any role in a list of roles.</description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsUserLoggedIn -->
	<function>
		<name>IsUserLoggedIn</name>
		<class>railo.runtime.functions.decision.IsUserLoggedIn</class>
		<description>Determines whether a user is logged in.</description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	
	
	<!-- IsValid -->
	<function>
		<name>isValid</name>
		<class>railo.runtime.functions.decision.IsValid</class>
		<description>
		Test a value by given rules
		</description>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>Yes</required>
		<description>The valid format for the data; one of the following. For detailed information on validation algorithms, see Validating form data using hidden fields in the .</description>
    </argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>min_or_pattern</name>
			<type>any</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>max</name>
			<type>any</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isWddx -->
	<function>
		<name>isWddx</name>
		<class>railo.runtime.functions.decision.IsWddx</class>
		<description>Determines if the object is a WDDX object</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>A WDDX packet</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsVideoFile -->
	<function>
		<name>IsVideoFile</name>
		<class>railo.runtime.functions.video.IsVideoFile</class>
		<description>
		Check if a String is a Video file
		</description>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsXML -->
	<function>
		<name>isXML</name>
		<class>railo.runtime.functions.decision.IsXML</class>
		<description>
		Check if a String is a well-formed XML
		</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>A string containing the XML document text</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsXmlAttribute -->
	<function>
		<name>IsXmlAttribute</name>
		<class>railo.runtime.functions.decision.IsXmlAttribute</class>
		<description>
		Check if a value is a XML Attribut (XML Attr Node)
		</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of an XML attribute</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isXmlDoc -->
	<function>
		<name>isXmlDoc</name>
		<class>railo.runtime.functions.decision.IsXmlDoc</class>
		<description>Determines if the object type passed in is XML node element</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of an XML document object</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isXmlElem -->
	<function>
		<name>isXmlElem</name>
		<class>railo.runtime.functions.decision.IsXmlElem</class>
		<description>Determines if the object passed in is XML element</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of an XML document object element</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- IsXmlNode -->
	<function>
		<name>IsXmlNode</name>
		<class>railo.runtime.functions.decision.IsXmlNode</class>
		<description>
		Check if a value is a XML Node 
		</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of an XML document object node.</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- isXmlRoot -->
	<function>
		<name>isXmlRoot</name>
		<class>railo.runtime.functions.decision.IsXmlRoot</class>
		<description>Determines if the object passed in is the top level XML root node</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>Name of an XML document object</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- javaCast -->
	<function>
		<name>javaCast</name>
		<class>railo.runtime.functions.string.JavaCast</class>
		<description>Returns back a duplicate variable of the java object casting it to the specific type</description>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>Yes</required>
		<description>Data type to which to convert variable:</description>
    </argument>
		<argument>
			<name>variable</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- jSStringFormat -->
	<function>
		<name>jSStringFormat</name>
		<class>railo.runtime.functions.string.JSStringFormat</class>
		<description>Returns the given string escaped to work within Javascript blocks safely</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one.</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lCase -->
	<function>
		<name>lCase</name>
		<class>railo.runtime.functions.string.LCase</class>
		<description>Returns the lower cased version of the string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- left -->
	<function>
		<name>left</name>
		<class>railo.runtime.functions.string.Left</class>
		<description>Returns the given string trimmed to the size given from the left of the string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one. </description>
    </argument>
		<argument>
			<name>count</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- len -->
	<function>
		<name>len</name>
		<class>railo.runtime.functions.string.Len</class>
		<description>Returns the length of the given string, binary, struct or array object</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string, the name of a string, or a binary object </description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listAppend -->
	<function>
		<name>listAppend</name>
		<class>railo.runtime.functions.list.ListAppend</class>
		<description>Adds the given value to the end of the list, with the given delimiter</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string value</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listAvg -->
	<function>
		<name>listAvg</name>
		<class>railo.runtime.functions.list.ListAvg</class>
		<description></description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listChangeDelims -->
	<function>
		<name>listChangeDelims</name>
		<class>railo.runtime.functions.list.ListChangeDelims</class>
		<description>Converts the given list delimitor to the new one</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>new_delimiter</name>
			<type>string</type>
			<required>Yes</required>
			<description>new delimeter to set. a delimeter is a characters that separate list elements.</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>existing delimeter to replace. a delimeter is a characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- ListCompact -->
	<function>
		<name>ListCompact</name>
		<class>railo.runtime.functions.list.ListCompact</class>
		<description>remove empty items at the and and at the start of the list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listContains -->
	<function>
		<name>listContains</name>
		<class>railo.runtime.functions.list.ListContains</class>
		<description>Determines if the substring is within the list, returning the list index of where the item was found; 0 if not found</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>substring</name>
			<type>string</type>
			<required>Yes</required>
			<description>the string to search in the list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listContainsNoCase -->
	<function>
		<name>listContainsNoCase</name>
		<class>railo.runtime.functions.list.ListContainsNoCase</class>
		<description>Determines if the substring is within the list (case insensitive search), returning the list index of where the item was found; 0 if not found</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>substring</name>
			<type>string</type>
			<required>Yes</required>
			<description>the string to search in the list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listDeleteAt -->
	<function>
		<name>listDeleteAt</name>
		<class>railo.runtime.functions.list.ListDeleteAt</class>
		<description>Removes item from the list at the given position, returning back the new list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>position</name>
			<type>number</type>
			<required>Yes</required>
			<description>position of the element to delete</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listFind -->
	<function>
		<name>listFind</name>
		<class>railo.runtime.functions.list.ListFind</class>
		<description>Determines if the element exists within the list (an exact match)</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>element for which to search</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listFindNoCase -->
	<function>
		<name>listFindNoCase</name>
		<class>railo.runtime.functions.list.ListFindNoCase</class>
		<description>Determines if the element exists within the list (an exact case insenstive match)</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>element for which to search</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listFirst -->
	<function>
		<name>listFirst</name>
		<class>railo.runtime.functions.list.ListFirst</class>
		<description>Returns the first element in the list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listGetAt -->
	<function>
		<name>listGetAt</name>
		<class>railo.runtime.functions.list.ListGetAt</class>
		<description>Returns the element at the given position</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>position</name>
			<type>number</type>
			<required>Yes</required>
			<description>position of the element to return</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listInsertAt -->
	<function>
		<name>listInsertAt</name>
		<class>railo.runtime.functions.list.ListInsertAt</class>
		<description>Inserts a new element into the list at the given position, returning the newly created list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>position</name>
			<type>number</type>
			<required>Yes</required>
			<description>Position at which to insert element. The first list position is 1.</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>An element or a list of elements.</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- ListIndexExists -->
	<function>
		<name>ListIndexExists</name>
		<class>railo.runtime.functions.list.ListIndexExists</class>
		<description>Determines if an element at the given position exists or not</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>index</name>
			<type>number</type>
			<required>Yes</required>
			<description>index to check for.</description>
		</argument>
		<argument>
			<name>delimeter</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- ListItemTrim -->
	<function>
		<name>ListItemTrim</name>
		<class>railo.runtime.functions.list.ListItemTrim</class>
		<description>Removes all the white space surrounding each element, returning back the new list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listLast -->
	<function>
		<name>listLast</name>
		<class>railo.runtime.functions.list.ListLast</class>
		<description>Returns the last element in the list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listLen -->
	<function>
		<name>listLen</name>
		<class>railo.runtime.functions.list.ListLen</class>
		<description>Returns the number of the elements in the list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listPrepend -->
	<function>
		<name>listPrepend</name>
		<class>railo.runtime.functions.list.ListPrepend</class>
		<description>Adds the given element to the start of the list, returning the new list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>An element or a list of elements.</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listQualify -->
	<function>
		<name>listQualify</name>
		<class>railo.runtime.functions.list.ListQualify</class>
		<description>Returns the list, of only that match the type, prefixed and postfixed with the qualifier</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>qualifier</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to insert before and after the list elements specified in the elements parameter.</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>no</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>elements</name>
			<type>string</type>
			<required>no</required>
			<description>
			which type of element are qualified
			 - all (all elements)
			 - char (elements that are composed of alphabetic characters)
			 </description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listRest -->
	<function>
		<name>listRest</name>
		<class>railo.runtime.functions.list.ListRest</class>
		<description>Returns all the elements in the list, minus the first element</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listSetAt -->
	<function>
		<name>listSetAt</name>
		<class>railo.runtime.functions.list.ListSetAt</class>
		<description>Inserts the given element at the given position, returning the newly created list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>position</name>
			<type>number</type>
			<required>Yes</required>
			<description>Position at which to set a value. The first list position is 1.</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>An element or a list of elements to set.</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listSort -->
	<function>
		<name>listSort</name>
		<class>railo.runtime.functions.list.ListSort</class>
		<description>Sorts the array using the criteria given returning the new sorted list</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>sort_type</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			there are different sort types:
			- numeric (sort by number)
			- text (sorts text alphabetically and case sensitive)
			- textnocase (sorts text alphabetically and ignore case sensitivity)
			</description>
		</argument>
		<argument>
			<name>sort_order</name>
			<type>string</type>
			<required>No</required>
			<description>sort direction:
			- asc (ascending sort order; default value)
			- desc (descending sort order) </description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listToArray -->
	<function>
		<name>listToArray</name>
		<class>railo.runtime.functions.list.ListToArray</class>
		<description>Converts the list into an array, optionally including the empty elements</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiter</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<argument>
			<name>multiCharacterDelimiter</name>
			<type>boolean</type>
			<required>No</required>
			<description>specifying whether the delimiters parameter specifies a multi-character delimiter. The default is false. If this parameter is true, the delimiters parameter must specify a single delimiter consisting of multiple characters. This parameter enables the ListToArray function to convert a list such as the following to an array of color names: red:|orange:|yellow:|green:|blue:|indigo:|violet.</description>
		</argument>
		
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- listTrim -->
	<function>
		<name>listTrim</name>
		<class>railo.runtime.functions.list.ListTrim</class>
		<status>deprecated</status>
		<description>this function is deprecated, use instead ListCompact</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>delimiters</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- listValueCount -->
	<function>
		<name>listValueCount</name>
		<class>railo.runtime.functions.list.ListValueCount</class>
		<description>Counts the number of times the given element appears in the list. When you set argument includeEmptyFields to true, you can also search for empty strings.</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>Item for which to search</description>
		</argument>
		<argument>
			<name>delimiter</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- listValueCountNoCase -->
	<function>
		<name>listValueCountNoCase</name>
		<class>railo.runtime.functions.list.ListValueCountNoCase</class>
		<description>Counts the number of times the given element appears in the list using a case-insensitive search. When you set argument includeEmptyFields to true, you can also search for empty strings.</description>
		<argument>
			<name>list</name>
			<type>string</type>
			<required>Yes</required>
			<description>a string list</description>
		</argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
			<description>Item for which to search</description>
		</argument>
		<argument>
			<name>delimiter</name>
			<type>string</type>
			<required>No</required>
			<description>Characters that separate list elements. The default value is comma.</description>
		</argument>
		<argument>
			<name>includeEmptyFields</name>
			<type>boolean</type>
			<required>No</required>
			<description>if set to true, empty values are included as well</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- lJustify -->
	<function>
		<name>lJustify</name>
		<class>railo.runtime.functions.string.LJustify</class>
		<description>Returns the given string justified to the left, padding out the words with spaces accordingly</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- log -->
	<function>
		<name>log</name>
		<class>railo.runtime.functions.math.Log</class>
		<description>Performs a log on the given number</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Positive real number for which to calculate the natural logarithm</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- log10 -->
	<function>
		<name>log10</name>
		<class>railo.runtime.functions.math.Log10</class>
		<description>Performs a base 10 log on the given number</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Positive real number for which to calculate the logarithm</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- lSCurrencyFormat -->
	<function>
		<name>lSCurrencyFormat</name>
		<class>railo.runtime.functions.international.LSCurrencyFormat</class>
		<description>Returns back the formatted currency representation of the number in the current session locale</description>
		<argument>
			<name>number</name>
			<type>object</type>
			<required>Yes</required>
		<description>Currency value</description>
    </argument>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lSDateFormat -->
	<function>
		<name>lSDateFormat</name>
		<class>railo.runtime.functions.international.LSDateFormat</class>
		<description>Formats a date string to a given output using the current sessions locale</description>
		<argument>
			<name>date</name>
			<type>any</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<argument>
			<name>mask</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lSEuroCurrencyFormat -->
	<function>
		<name>lSEuroCurrencyFormat</name>
		<class>railo.runtime.functions.international.LSEuroCurrencyFormat</class>
		<description>Returns back the formatted EURO currency representation of the number</description>
		<argument>
			<name>currency_number</name>
			<type>object</type>
			<required>Yes</required>
			<description>Currency value</description>
		</argument>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>No</required>
			<description>
			one of the following:
			- local (the currency format used in the locale. (default) )
			- international (the international standard currency format of the locale)
			- none (the currency format used in the locale; no currency symbol)</description>
		</argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
			<description>Locale to use instead of the locale of the page when processing the function</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lSIsCurrency -->
	<function>
		<name>lSIsCurrency</name>
		<class>railo.runtime.functions.international.LSIsCurrency</class>
		<description>Determines if the string passed in, represents a currency in the current locale</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A currency string</description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- lSIsDate -->
	<function>
		<name>lSIsDate</name>
		<class>railo.runtime.functions.international.LSIsDate</class>
		<description>Determines if the string passed in, represents a date in the current locale</description>
		<argument>
			<name>string</name>
			<type>any</type>
			<required>Yes</required>
		<description>A string or a variable that contains one </description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- lSIsNumeric -->
	<function>
		<name>lSIsNumeric</name>
		<class>railo.runtime.functions.international.LSIsNumeric</class>
		<description>Determines if the string passed in, represents a number in the current locale</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- lSNumberFormat -->
	<function>
		<name>lSNumberFormat</name>
		<class>railo.runtime.functions.international.LSNumberFormat</class>
		<description>Formats a number to the given format mask in the current session locale</description>
		<argument>
			<name>number</name>
			<type>any</type>
			<required>Yes</required>
		<description>Number to format</description>
    </argument>
		<argument>
			<name>mask</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lSParseCurrency -->
	<function>
		<name>lSParseCurrency</name>
		<class>railo.runtime.functions.international.LSParseCurrency</class>
		<description>Attempts to convert the current represented in the string to a number using the current sessions locale</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A locale-specific string</description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lSParseDateTime -->
	<function>
		<name>lSParseDateTime</name>
		<class>railo.runtime.functions.international.LSParseDateTime</class>
		<description>Formats a date string to a given output using the current session locale</description>
		<argument>
			<name>date</name>
			<type>object</type>
			<required>Yes</required>
		<description>A string in a format that is readable in the current locale. </description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- lSParseEuroCurrency -->
	<function>
		<name>lSParseEuroCurrency</name>
		<class>railo.runtime.functions.international.LSParseEuroCurrency</class>
		<description>Attempts to convert the EURO represented in the string to a number</description>
		<argument>
			<name>currency_string</name>
			<type>string</type>
			<required>Yes</required>
		<description>Locale-specific string</description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lSParseNumber -->
	<function>
		<name>lSParseNumber</name>
		<class>railo.runtime.functions.international.LSParseNumber</class>
		<description>Attempts to convert the string represented to a number using the current sessions locale</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- lSTimeFormat -->
	<function>
		<name>lSTimeFormat</name>
		<class>railo.runtime.functions.international.LSTimeFormat</class>
		<description>Formats a time string to a given output using the current session locale</description>
		<argument>
			<name>time</name>
			<type>any</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<argument>
			<name>mask</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- lTrim -->
	<function>
		<name>lTrim</name>
		<class>railo.runtime.functions.string.LTrim</class>
		<description>Trims the whitespace from the left side of the string only, returning the new string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- max -->
	<function>
		<name>max</name>
		<class>railo.runtime.functions.math.Max</class>
		<description>Returns the largest of the two given numbers</description>
		<argument>
			<name>number1</name>
			<type>number</type>
			<required>Yes</required>
			<description>first number</description>
		</argument>
		<argument>
			<name>number2</name>
			<type>number</type>
			<required>Yes</required>
			<description>second number</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- metaphone -->
	<function>
		<name>metaphone</name>
		<class>railo.runtime.functions.string.Metaphone</class>
		<description>Metaphone is a phonetic algorithm, an algorithm published in 1990 for indexing words by their English pronunciation. The algorithm produces variable length keys as its output, as opposed to Soundex's fixed-length keys. Similar sounding words share the same keys.</description>
		<argument>
			<name>str</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- mid -->
	<function>
		<name>mid</name>
		<class>railo.runtime.functions.string.Mid</class>
		<description>Returns substring within the string from the start position for the number of characters</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>Must be single-quotation mark or double-quotation mark delimited. </description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>count</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- min -->
	<function>
		<name>min</name>
		<class>railo.runtime.functions.math.Min</class>
		<description>Returns the smallest of the two given numbers</description>
		<argument>
			<name>number1</name>
			<type>number</type>
			<required>Yes</required>
			<description>first number</description>
		</argument>
		<argument>
			<name>number2</name>
			<type>number</type>
			<required>Yes</required>
			<description>second number</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- minute -->
	<function>
		<name>minute</name>
		<class>railo.runtime.functions.dateTime.Minute</class>
		<description>Returns the minute of the referenced by the date</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- millisecond -->
	<function>
		<name>millisecond</name>
		<class>railo.runtime.functions.dateTime.MilliSecond</class>
		<description>Returns the milliseconds of the referenced date</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- month -->
	<function>
		<name>month</name>
		<class>railo.runtime.functions.dateTime.Month</class>
		<description>Returns the month of the referenced date (1=Jan .. 12=Dec)</description>
		<argument>
			<name>Date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- monthAsString -->
	<function>
		<name>monthAsString</name>
		<class>railo.runtime.functions.string.MonthAsString</class>
		<description>Returns the string label for the given month</description>
		<argument>
			<name>monthnumber</name>
			<type>number</type>
			<required>Yes</required>
		<description>a number between 1 and 12</description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- monthShortAsString -->
	<function>
		<name>monthShortAsString</name>
		<class>railo.runtime.functions.string.MonthShortAsString</class>
		<description>Returns the string label for the given month in short format</description>
		<argument>
			<name>monthnumber</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- newLine -->
	<function>
		<name>newLine</name>
		<class>railo.runtime.functions.string.NewLine</class>
		<description>returns a new line</description>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- now -->
	<function>
		<name>now</name>
		<class>railo.runtime.functions.dateTime.Now</class>
		<description>Returns the current date and time</description>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- nowServer -->
	<function>
		<name>nowServer</name>
		<class>railo.runtime.functions.dateTime.NowServer</class>
		<status>deprecated</status>
		<description>this function is deprecated, returns the current time on the server independend on railo timezone definition</description>
		<return>
			<type>datetime</type>
		</return>
	</function>
	<!-- numberFormat -->
	<function>
		<name>numberFormat</name>
		<class>railo.runtime.functions.displayFormatting.NumberFormat</class>
		<description>Formats a number to the given format mask</description>
		<argument>
			<name>number</name>
			<type>any</type>
			<required>Yes</required>
		<description>A number.</description>
    </argument>
		<argument>
			<name>mask</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- nullValue -->
	<function>
		<name>nullValue</name>
		<class>railo.runtime.functions.other.NullValue</class>
		<description>returns null</description>
		<return>
			<type>any</type>
		</return>
	</function>
	
	<!-- ORMExecuteQuery -->
	<function>
		<name>ORMExecuteQuery</name>
		<class>railo.runtime.functions.orm.ORMExecuteQuery</class>
		<description>Runs queries based on the Hibernate Query Language (HQL) directly on a database. </description>
		<argument>
			<name>hql</name>
			<type>string</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>paramsOrUnique</name>
			<type>any</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>uniqueOrQueryOptions</name>
			<type>any</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>queryOptions</name>
			<type>any</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- ORMClearSession -->
	<function>
		<name>ORMClearSession</name>
		<class>railo.runtime.functions.orm.ORMClearSession</class>
		<description>ORMClearSession removes all the entities that are loaded or created in the session. This clears the first level cache and removes the objects that are not yet saved to the database.</description>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ORMCloseSession -->
	<function>
		<name>ORMCloseSession</name>
		<class>railo.runtime.functions.orm.ORMCloseSession</class>
		<description>Closes the current ORM session associated with the data source specified in the application.</description>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ORMEvictCollection -->
	<function>
		<name>ORMEvictCollection</name>
		<class>railo.runtime.functions.orm.ORMEvictCollection</class>
		<description>This method is used to evict all the collection or association data for the given component name and collection name, from the secondary cache. If the primary key is specified, then, the collection or association data of the entity with the primary key is evicted.</description>
		
		<argument>
			<name>entityName</name>
			<type>String</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>collectionName</name>
			<type>String</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>primaryKey</name>
			<type>String</type>
			<required>no</required>
		<description></description>
    </argument>
		
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ORMEvictEntity -->
	<function>
		<name>ORMEvictEntity</name>
		<class>railo.runtime.functions.orm.ORMEvictEntity</class>
		<description>This method is used to evict items for the given component name, from the secondary cache. If the primary key is specified, then the data of the entity with that primary key is evicted. Primary key should be a value in case of simple primary key or should be a struct in case of composite primary key.</description>
		
		<argument>
			<name>entityName</name>
			<type>String</type>
			<required>yes</required>
		<description></description>
    </argument>
		<argument>
			<name>primaryKey</name>
			<type>String</type>
			<required>no</required>
		<description></description>
    </argument>
		
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ORMEvictQueries -->
	<function>
		<name>ORMEvictQueries</name>
		<class>railo.runtime.functions.orm.ORMEvictQueries</class>
		<description>This method is used to evict the data of all the queries from the default query cache. If cache name is specified, then, the data of all the queries belonging to the cache region with the given cache name are evicted.</description>
		<argument>
			<name>cacheName</name>
			<type>String</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ORMFlush -->
	<function>
		<name>ORMFlush</name>
		<class>railo.runtime.functions.orm.ORMFlush</class>
		<description>Flushes the current ORM session associated with the data source specified in the application. ORMFlush flushes all the pending CRUD operations in that request.</description>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- ORMGetSession -->
	<function>
		<name>ORMGetSession</name>
		<class>railo.runtime.functions.orm.ORMGetSession</class>
		<description>Returns the current ORM session, which is the Session associated with the data source specified in the application.</description>
		<return>
			<type>object</type>
		</return>
	</function>
	<!-- ORMGetSessionFactory -->
	<function>
		<name>ORMGetSessionFactory</name>
		<class>railo.runtime.functions.orm.ORMGetSessionFactory</class>
		<description>ORMGetSessionFactory returns the underlying Hibernate SessionFactory object. For information on Session API see:</description>
		<return>
			<type>object</type>
		</return>
	</function>
	<!-- ORMReload -->
	<function>
		<name>ORMReload</name>
		<class>railo.runtime.functions.orm.ORMReload</class>
		<description>Reloads ORM objects dynamically.</description>
		<return>
			<type>void</type>
		</return>
	</function>
	
	
	<!-- pagePoolClear -->
	<function>
		<name>pagePoolClear</name>
		<class>railo.runtime.functions.system.PagePoolClear</class>
		<description>clear pages in pools</description>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- pagePoolList -->
	<function>
		<name>pagePoolList</name>
		<class>railo.runtime.functions.system.PagePoolList</class>
		<description>list all pages in pools</description>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- paragraphFormat -->
	<function>
		<name>paragraphFormat</name>
		<class>railo.runtime.functions.displayFormatting.ParagraphFormat</class>
		<description>Formats the carriage returns in a string to a HTML alternatives</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one </description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- parameterExists -->
	<function>
		<name>parameterExists</name>
		<class>railo.runtime.functions.other.ParameterExists</class>
		<description>Determines if the parameter exists</description>
		<argument>
			<name>parameter</name>
			<type>variable_string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- parseDateTime -->
	<function>
		<name>parseDateTime</name>
		<class>railo.runtime.functions.string.ParseDateTime</class>
		<description>Formats a date string to a given output</description>
		<argument>
			<name>date</name>
			<type>object</type>
			<required>Yes</required>
		<description>A string containing a date/time value formatted according to U.S. locale conventions.</description>
    </argument>
		<argument>
			<name>popConversion</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>datetime</type>
		</return>
	</function>
	
	<!-- parseNumber -->
	<function>
		<name>parseNumber</name>
		<class>railo.runtime.functions.string.ParseNumber</class>
		<description>
		Parses the string argument as a numeric value. 
		</description>
		<argument>
			<name>nummber</name>
			<type>string</type>
			<required>Yes</required>
			<description>
			the String containing the numeric representation to be parsed
			</description>
		</argument>
		<argument>
			<name>radix</name>
			<type>string</type>
			<required>No</required>
			<description>
			the radix to be used while parsing (bin,oct,dec,hex)
			</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	
	<!-- PrecisionEvaluate -->
	<function>
		<name>PrecisionEvaluate</name>
		<class>railo.runtime.functions.dynamicEvaluation.PrecisionEvaluate</class>
		<description>Evaluates one or more string expressions, dynamically, from left to right, using BigDecimal precision arithmetic to calculate the values of arbitrary precision arithmetic expressions.</description>
		<argument-type>dynamic</argument-type>
		<argument-min>1</argument-min>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- pi -->
	<function>
		<name>pi</name>
		<class>railo.runtime.functions.math.Pi</class>
		<description>Returns the mathematical constant PI (22/7)</description>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- preserveSingleQuotes -->
	<function>
		<name>preserveSingleQuotes</name>
		<class>railo.runtime.functions.other.PreserveSingleQuotes</class>
		<description>Returns back string without letting the engine escape the single quotes. Used within CFQUERY blocks usually</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>Variable that contains a string in which to preserve single-quotation marks.</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- quarter -->
	<function>
		<name>quarter</name>
		<class>railo.runtime.functions.dateTime.Quarter</class>
		<description>Returns the quarter the referenced date falls within (1,2,3,4)</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- query -->
	<function>
		<name>query</name>
		<class>railo.runtime.functions.query.Query_</class>
		<description>create ans populates a query object in the form query(columnName1:[1,2,3],columnName2:[4,5,6])</description>
		<argument-type>dynamic</argument-type>
		<return>
			<type>query</type>
		</return>
	</function>
	<!-- queryAddColumn -->
	<function>
		<name>queryAddColumn</name>
		<class>railo.runtime.functions.query.QueryAddColumn</class>
		<description>Adds a new column of data to the exist query object, returning the column number</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description>Name of a query object.</description>
    </argument>
		<argument>
			<name>column</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<!-- argument>
			<name>array</name>
			<type>array</type>
			<required>Yes</required>
		</argument -->
		<argument>
			<name>datatype_or_array</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>array</name>
			<type>any</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- queryAddRow -->
	<function>
		<name>queryAddRow</name>
		<class>railo.runtime.functions.query.QueryAddRow</class>
		<description>Adds the specified the number of rows to the end of the query</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description>Name of an executed query.</description>
    </argument>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>		
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- queryColumnCount -->
	<function>
		<name>queryColumnCount</name>
		<class>railo.runtime.functions.query.QueryColumnCount</class>
		<description>column count of given query</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>	
		<return>
			<type>number</type>
		</return>
	</function>
	
	
	<!-- QueryConvertForGrid -->
	<function>
		<name>QueryConvertForGrid</name>
		<class>railo.runtime.functions.query.QueryConvertForGrid</class>
		<description>Converts query data to a structure that contains a paged subset of the query. Used in CFC functions that return data to Ajax format cfgrid controls in response to a bind expression.</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description>Name of the query whose data is returned.</description>
    </argument>	
		<argument>
			<name>page</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>		
		<argument>
			<name>pageSize</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>	
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- queryColumnArray -->
	<function>
		<name>queryColumnArray</name>
		<class>railo.runtime.functions.query.QueryColumnArray</class>
		<description>Returns all the data in a query for a given column</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>	
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- queryColumnList -->
	<function>
		<name>queryColumnList</name>
		<class>railo.runtime.functions.query.QueryColumnList</class>
		<description>Returns all the data in a query for a given column as a list</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>delimeter</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>	
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- QueryDeleteColumn -->
	<function>
		<name>QueryDeleteColumn</name>
		<class>railo.runtime.functions.query.QueryDeleteColumn</class>
		<description>
		removes a row from a query and return removed row as array
		</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>column</name>
			<type>String</type>
			<required>yes</required>
		<description></description>
    </argument>	
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- QueryDeleteRow -->
	<function>
		<name>QueryDeleteRow</name>
		<class>railo.runtime.functions.query.QueryDeleteRow</class>
		<description>Deletes the row within a query object. Modifies the original query object</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>row</name>
			<type>number</type>
			<required>no</required>
		<description></description>
    </argument>	
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- queryGetCell -->
	<function>
		<name>queryGetCell</name>
		<class>railo.runtime.functions.query.QueryGetCell</class>
		<description>return the value of a specific query cell</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
			<description>query to get cell value from</description>
		</argument>
		<argument>
			<name>column_name</name>
			<type>string</type>
			<required>Yes</required>
			<description>name of the column</description>
		</argument>
		<argument>
			<name>row_number</name>
			<type>number</type>
			<required>No</required>
			<description>row number (1-n)</description>
		</argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- queryNew -->
	<function>
		<name>queryNew</name>
		<class>railo.runtime.functions.query.QueryNew</class>
		<description>Creates a new query object with the columns past in of the optional types</description>
		<argument>
			<name>columnlist</name>
			<type>string</type>
			<required>Yes</required>
		<description>Comma-delimited list of column names, or an empty string. </description>
    </argument>
		<argument>
			<name>columntypelist</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>query</type>
		</return>
	</function>
	<!-- queryRecordCount -->
	<function>
		<name>queryRecordCount</name>
		<class>railo.runtime.functions.query.QueryRecordCount</class>
		<description>row count of given query</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>	
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- querySetCell -->
	<function>
		<name>querySetCell</name>
		<class>railo.runtime.functions.query.QuerySetCell</class>
		<description>Sets the given column within a query with the value at the given row, or the last row if not specified</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description>Name of an executed query. </description>
    </argument>
		<argument>
			<name>column_name</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>row_number</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- querySlice -->
	<function>
		<name>querySlice</name>
		<class>railo.runtime.functions.query.QuerySlice</class>
		<description>creates a new query containing a part of the given query</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>offset</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>query</type>
		</return>
	</function>
	<!-- querySort -->
	<function>
		<name>querySort</name>
		<class>railo.runtime.functions.query.QuerySort</class>
		<description>Sorts the query based on the column specified and the order criteria given. Modifies the original query object</description>
		<argument>
			<name>query</name>
			<type>query</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>column_name</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>direction</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- quotedValueList -->
	<function>
		<name>quotedValueList</name>
		<class>railo.runtime.functions.other.QuotedValueList</class>
		<description>Returns a quoted list of all the values, for a given column within the query, delimited by the value given</description>
		<argument>
			<name>query_column</name>
			<type>variable_string</type>
			<required>Yes</required>
		<description>Name of an executed query and column. Separate query name and column name with a period.</description>
    </argument>
		<argument>
			<name>delimiter</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- rand -->
	<function>
		<name>rand</name>
		<class>railo.runtime.functions.math.Rand</class>
		<description>Returns a random number</description>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
		<description>The algorithm to use to generate the random number.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- randomize -->
	<function>
		<name>randomize</name>
		<class>railo.runtime.functions.math.Randomize</class>
		<description>Returns a random number seeding the random number generator</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>a number</description>
    </argument>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- randRange -->
	<function>
		<name>randRange</name>
		<class>railo.runtime.functions.math.RandRange</class>
		<description>Returns a random number between the two numbers using the given optional random generator</description>
		<argument>
			<name>number1</name>
			<type>number</type>
			<required>Yes</required>
			<description>smaller number</description>
		</argument>
		<argument>
			<name>number2</name>
			<type>number</type>
			<required>Yes</required>
			<description>bigger number</description>
		</argument>
		<argument>
			<name>algorithm</name>
			<type>string</type>
			<required>No</required>
			<description>
			The algorithm to use to generate the random number.
			- CFMX_COMPAT (very simple and not very secure algorithm (default)).
            - SHA1PRNG (generates a number using the Sun Java SHA1PRNG algorithm. This algorithm provides greater randomness than the default algorithm)
            - IBMSecureRandom (IBM JVM does not support the SHA1PRNG algorithm)</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- ReleaseComObject -->
	<function>
		<name>releaseComObject</name>
		<class>railo.runtime.functions.other.ReleaseComObject</class>
		<description>Releases a COM Object and frees up resources that it used. </description>
		<argument>
			<name>comObject</name>
			<type>any</type>
			<required>Yes</required>
		<description>Variable name of a COM object that was created using the function or tag. </description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- rEFind -->
	<function>
		<name>rEFind</name>
		<class>railo.runtime.functions.string.REFind</class>
		<description>Performs a case-sensitive regular expression match to the given string. If subexpression=true then it returns a structure (pos,len)</description>
		<argument>
			<name>reg_expression</name>
			<type>string</type>
			<required>Yes</required>
		<description>Regular expression for which to search. Case sensitive.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>arg4</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- rEFindNoCase -->
	<function>
		<name>rEFindNoCase</name>
		<class>railo.runtime.functions.string.REFindNoCase</class>
		<description>Performs a case-insensitive regular expression match to the given string. If subexpression=true then it returns a structure (pos,len)</description>
		<argument>
			<name>reg_expression</name>
			<type>string</type>
			<required>Yes</required>
		<description>Regular expression for which to search. Case-insensitive.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>returnsubexpressions</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- REMatch -->
	<function>
		<name>REMatch</name>
		<class>railo.runtime.functions.string.REMatch</class>
		<description>Returns an array of strings of all the matches that the given regular expression found performing a case-sensitive match</description>
		<argument>
			<name>reg_expression</name>
			<type>string</type>
			<required>Yes</required>
		<description>Regular expression for which to search. Case sensitive.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- REMatchNoCase -->
	<function>
		<name>REMatchNoCase</name>
		<class>railo.runtime.functions.string.REMatchNoCase</class>
		<description>Returns an array of strings of all the matches that the given regular expression found performing a case-insensitive match</description>
		<argument>
			<name>reg_expression</name>
			<type>string</type>
			<required>Yes</required>
		<description>Regular expression for which to search. Case-insensitive.</description>
    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- removeChars -->
	<function>
		<name>removeChars</name>
		<class>railo.runtime.functions.string.RemoveChars</class>
		<description>Removes the substring from the given string, at the position for the characters count</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String in which to search.</description>
    </argument>
		<argument>
			<name>start</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>count</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- repeatString -->
	<function>
		<name>repeatString</name>
		<class>railo.runtime.functions.string.RepeatString</class>
		<description>Returns a new string, made up of the string repeated the number of times specified</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one. </description>
    </argument>
		<argument>
			<name>count</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- replace -->
	<function>
		<name>replace</name>
		<class>railo.runtime.functions.string.Replace</class>
		<description>Looks for the occurences of a given substring within a string, replacing it with a new one</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String in which to search. </description>
    </argument>
		<argument>
			<name>substring1</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>substring2</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>scope</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- replaceList -->
	<function>
		<name>replaceList</name>
		<class>railo.runtime.functions.string.ReplaceList</class>
		<description>Peforms a series of search'n'replace on a single string using the comma-separated lists passed in</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string</description>
    </argument>
		<argument>
			<name>list1</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>list2</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- replaceNoCase -->
	<function>
		<name>replaceNoCase</name>
		<class>railo.runtime.functions.string.ReplaceNoCase</class>
		<description>Looks for the occurences of a given substring within a string, replacing it with a new one, ignoring all case issues</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string (or variable that contains one) within which to replace substring.</description>
    </argument>
		<argument>
			<name>substring1</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>substring2</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>scope</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- rEReplace -->
	<function>
		<name>rEReplace</name>
		<class>railo.runtime.functions.string.REReplace</class>
		<description>Runs a regular expression replacement against the string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>String within which to search. </description>
    </argument>
		<argument>
			<name>reg_expression</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>substring</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>scope</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- rEReplaceNoCase -->
	<function>
		<name>rEReplaceNoCase</name>
		<class>railo.runtime.functions.string.REReplaceNoCase</class>
		<description>Runs a regular expression replacement against the string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one.</description>
    </argument>
		<argument>
			<name>reg_expression</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>substring</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>scope</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- reverse -->
	<function>
		<name>reverse</name>
		<class>railo.runtime.functions.string.Reverse</class>
		<description>Returns the given string but in reverse order</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one </description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- right -->
	<function>
		<name>right</name>
		<class>railo.runtime.functions.string.Right</class>
		<description>Returns the given string trimmed to the size given from the right of the string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one. </description>
    </argument>
		<argument>
			<name>count</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- rJustify -->
	<function>
		<name>rJustify</name>
		<class>railo.runtime.functions.string.RJustify</class>
		<description>Returns the given string justified to the right, padding out the words with spaces accordingly</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string enclosed in quotation marks</description>
    </argument>
		<argument>
			<name>length</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- round -->
	<function>
		<name>round</name>
		<class>railo.runtime.functions.math.Round</class>
		<description>Rounds the given number down</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Number to round </description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- rTrim -->
	<function>
		<name>rTrim</name>
		<class>railo.runtime.functions.string.RTrim</class>
		<description>Trims the whitespace from the right side of the string only, returning the new string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one </description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- second -->
	<function>
		<name>second</name>
		<class>railo.runtime.functions.dateTime.Second</class>
		<description>Returns the second of the date referenced</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>A date/time object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- SendGatewayMessage -->
	<function>
		<name>SendGatewayMessage</name>
		<class>railo.runtime.functions.gateway.SendGatewayMessage</class>
		<description>Sends an outgoing message through a event gateway.</description>
		<argument>
			<name>gatewayID</name>
			<type>string</type>
			<required>Yes</required>
		<description>Identifier of the gateway to send the message.</description>
    </argument>
		<argument>
			<name>data</name>
			<type>struct</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- serialize -->
	<function>
		<name>serialize</name>
		<class>railo.runtime.functions.dynamicEvaluation.Serialize</class>
		<description>opposite of evaluate, this function serialize all cfml object and all serializble Java objects. can also serilize Components.</description>
		<argument>
			<name>object</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- SerializeJSON -->
	<function>
		<name>SerializeJSON</name>
		<class>railo.runtime.functions.conversion.SerializeJSON</class>
		<description>Converts CFML data into a JSON (JavaScript Object Notation) representation of the data.</description>
		<argument>
			<name>var</name>
			<type>any</type>
			<required>Yes</required>
			<description>A CFML data value or variable that represents one.</description>
		</argument>
		<argument>
			<name>serializeQueryByColumns</name>
			<type>boolean</type>
			<required>No</required>
			<description>A Boolean value that specifies how to serialize CFML queries.</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- setEncoding -->
	<function>
		<name>setEncoding</name>
		<class>railo.runtime.functions.international.SetEncoding</class>
		<description>Sets the encoding of the given scope with the encoding type</description>
		<argument>
			<name>scope</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- setLocale -->
	<function>
		<name>setLocale</name>
		<class>railo.runtime.functions.international.SetLocale</class>
		<description>Sets the local for the current request, returning the previous one</description>
		<argument>
			<name>new_locale</name>
			<type>string</type>
			<required>Yes</required>
		<description>The name of a locale; for example, \"English (US)\"</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- setProfileString -->
	<function>
		<name>setProfileString</name>
		<class>railo.runtime.functions.system.SetProfileString</class>
		<description>Sets the given property/value within the INI file given</description>
		<argument>
			<name>iniPath</name>
			<type>string</type>
			<required>Yes</required>
		<description>Absolute path of initialization file</description>
    </argument>
		<argument>
			<name>section</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>entry</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>value</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- setVariable -->
	<function>
		<name>setVariable</name>
		<class>railo.runtime.functions.dynamicEvaluation.SetVariable</class>
		<description>Sets the value of the variable indicated by address</description>
		<argument>
			<name>name</name>
			<type>string</type>
			<required>Yes</required>
		<description>Variable name</description>
    </argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- sgn -->
	<function>
		<name>sgn</name>
		<class>railo.runtime.functions.math.Sgn</class>
		<description>Determines the sign of the number; return -1 if negative, 1 if positive, or 0</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>A number</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- sin -->
	<function>
		<name>sin</name>
		<class>railo.runtime.functions.math.Sin</class>
		<description>Returns the trigonometric sine of an angle</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Angle, in radians for which to calculate the sine.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- sizeOf -->
	<function>
		<name>sizeOf</name>
		<class>railo.runtime.functions.system.SizeOf</class>
		<description>this function is experimentell, to not use in productive enviroment. this function returns the size in bytes of a given object.</description>
		<argument>
			<name>obj</name>
			<type>object</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- soundex -->
	<function>
		<name>soundex</name>
		<class>railo.runtime.functions.string.Soundex</class>
		<description>Soundex is a phonetic algorithm for indexing names by sound, as pronounced in English. The goal is for homophones to be encoded to the same representation so that they can be matched despite minor differences in spelling. The algorithm mainly encodes consonants; a vowel will not be encoded unless it is the first letter. Soundex is the most widely known of all phonetic algorithms, as it is a standard feature of MS SQL and Oracle, and is often used (incorrectly) as a synonym for "phonetic algorithm".</description>
		<argument>
			<name>str</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>String</type>
		</return>
	</function>
	<!-- spanExcluding -->
	<function>
		<name>spanExcluding</name>
		<class>railo.runtime.functions.string.SpanExcluding</class>
		<description>Returns back the string up to the point where any of the strings in sub-string is matched</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<argument>
			<name>set</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- spanIncluding -->
	<function>
		<name>spanIncluding</name>
		<class>railo.runtime.functions.string.SpanIncluding</class>
		<description>Returns back the string up to the point where any of the strings in sub-string is matched, including the substring</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains the search string.</description>
    </argument>
		<argument>
			<name>set</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- sqr -->
	<function>
		<name>sqr</name>
		<class>railo.runtime.functions.math.Sqr</class>
		<description>Performs the square root of the number given</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>A positive integer. Number whose square root to get.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- sleep -->
	<function>
		<name>Sleep</name>
		<class>railo.runtime.functions.system.Sleep</class>
		<description>pauses the current request for the amount of time specified</description>
		<argument>
			<name>duration</name>
			<type>number</type>
			<required>Yes</required>
		<description>Time, in milliseconds, to stop processing the thread.</description>
    </argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- SSLCertificateList -->
	<function>
		<name>SSLCertificateList</name>
		<class>railo.runtime.functions.other.SSLCertificateList</class>
		<description>list all Certificates availble on a specific host</description>
		<argument>
			<name>host</name>
			<type>string</type>
			<required>Yes</required>
			<description>host to get Certificates from</description>
		</argument>
		<argument>
			<name>port</name>
			<type>number</type>
			<required>no</required>
			<description>port of the host, default is 443</description>
		</argument>
		<return>
			<type>query</type>
		</return>
	</function>
	<!-- SSLCertificateInstall -->
	<function>
		<name>SSLCertificateInstall</name>
		<class>railo.runtime.functions.other.SSLCertificateInstall</class>
		<description>install certificates of a specific host</description>
		<argument>
			<name>host</name>
			<type>string</type>
			<required>Yes</required>
			<description>host to get Certificates from</description>
		</argument>
		<argument>
			<name>port</name>
			<type>number</type>
			<required>no</required>
			<description>port of the host, default is 443</description>
		</argument>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- stripCr -->
	<function>
		<name>stripCr</name>
		<class>railo.runtime.functions.other.StripCr</class>
		<description>Removes all the carriage returns from a string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- stringlen -->
	<function>
		<name>stringlen</name>
		<class>railo.runtime.functions.string.StringLen</class>
		<description>returns the len of a string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	
	<!-- _jsonStruct -->
	<function>
		<name>_jsonStruct</name>
		<class>railo.runtime.functions.struct.JsonStruct</class>
		<status>hidden</status>
		<description>internal function used as for literal struct defintion.</description>
		<argument-type>dynamic</argument-type>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- _struct -->
	<function>
		<name>struct</name>
		<class>railo.runtime.functions.struct.Struct_</class>
		<description>used to create and populate a struct at the same time, example struct(key1:1,key2:2)</description>
		<argument-type>dynamic</argument-type>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- structAppend -->
	<function>
		<name>structAppend</name>
		<class>railo.runtime.functions.struct.StructAppend</class>
		<description>Appends all the data from struct2 into struct2, replacing duplicate keys unless specified by the overwrite flag</description>
		<argument>
			<name>Struct1</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure to which struct2 is appended.</description>
    </argument>
		<argument>
			<name>Struct2</name>
			<type>struct</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>OverwriteFlag</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- structClear -->
	<function>
		<name>structClear</name>
		<class>railo.runtime.functions.struct.StructClear</class>
		<description>Removes all the data from the given structure</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure to clear</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- structCopy -->
	<function>
		<name>structCopy</name>
		<class>railo.runtime.functions.struct.StructCopy</class>
		<description>Makes a copy of the structure and returns a brand new structure, copying all the data held within</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure to copy</description>
    </argument>
		<return>
			<type>object</type>
		</return>
	</function>
	<!-- structCount -->
	<function>
		<name>structCount</name>
		<class>railo.runtime.functions.struct.StructCount</class>
		<description>Returns the number of elements within the structure</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure to access</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- structDelete -->
	<function>
		<name>structDelete</name>
		<class>railo.runtime.functions.struct.StructDelete</class>
		<description>Deletes the given key from the structure, optionally returning whether or not it was found before deletion</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure contains element to remove.</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>indicatenotexisting</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- structFind -->
	<function>
		<name>structFind</name>
		<class>railo.runtime.functions.struct.StructFind</class>
		<description>Returns the data at the given key, throwing an exception if it does not exist</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure that contains the value to return</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- structFindKey -->
	<function>
		<name>structFindKey</name>
		<class>railo.runtime.functions.struct.StructFindKey</class>
		<description>Returns the data (or an array of all the values) at the given key, throwing an exception if it does not exist</description>
		<argument>
			<name>Top</name>
			<type>struct</type>
			<required>Yes</required>
		<description>object (structure or array) from which to start search. This parameter requires an object, not a name of an object.</description>
    </argument>
		<argument>
			<name>Key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>Scope</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- structFindValue -->
	<function>
		<name>structFindValue</name>
		<class>railo.runtime.functions.struct.StructFindValue</class>
		<description>Returns the data (or an array of all the values) that matches the value, throwing an exception if it does not exist</description>
		<argument>
			<name>Top</name>
			<type>struct</type>
			<required>Yes</required>
		<description>structure from which to start search. This parameter requires an object, not a name of an object.</description>
    </argument>
		<argument>
			<name>Key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>Scope</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- structGet -->
	<function>
		<name>structGet</name>
		<class>railo.runtime.functions.struct.StructGet</class>
		<description>Returns a new structure, or heirarchy of structures to match the given key path</description>
		<argument>
			<name>PathDesired</name>
			<type>string</type>
			<required>Yes</required>
		<description>Pathname of variable that contains structure or array from which Railo retrieves structure.</description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- structInsert -->
	<function>
		<name>structInsert</name>
		<class>railo.runtime.functions.struct.StructInsert</class>
		<description>Inserts the key and value into the given structure, overwriting if already exists</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure to contain the new key-value pair.</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>allowoverwrite</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- structIsEmpty -->
	<function>
		<name>structIsEmpty</name>
		<class>railo.runtime.functions.struct.StructIsEmpty</class>
		<description>Returns whether or not the structure is empty of all keys</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure to test</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- structKeyArray -->
	<function>
		<name>structKeyArray</name>
		<class>railo.runtime.functions.struct.StructKeyArray</class>
		<description>Returns back an array of all the keys in the structure</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure from which to extract a list of keys</description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- structKeyExists -->
	<function>
		<name>structKeyExists</name>
		<class>railo.runtime.functions.struct.StructKeyExists</class>
		<tte-class>railo.transformer.cfml.evaluator.func.impl.StructKeyExists</tte-class>
		<description>Determines whether the given key exists in the structure</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Name of structure to test</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- structKeyList -->
	<function>
		<name>structKeyList</name>
		<class>railo.runtime.functions.struct.StructKeyList</class>
		<description>Returns all the keys in the structure as a delimited string</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure from which to extract a list of keys.</description>
    </argument>
		<argument>
			<name>delimiter</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- structKeyTranslate -->
	<function>
		<name>structKeyTranslate</name>
		<class>railo.runtime.functions.struct.StructKeyTranslate</class>
		<description></description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>deepTranslation</name>
			<type>boolean</type>
			<required>No</required>
			<description>
				also translate keys of child structures
			</description>
		</argument>
		<argument>
			<name>leaveOriginalKey</name>
			<type>boolean</type>
			<required>No</required>
			<description>
				leave original key in struct
			</description>
		</argument>
		
		
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- structNew -->
	<function>
		<name>structNew</name>
		<class>railo.runtime.functions.struct.StructNew</class>
		<description>Creates a new structure</description>
		<argument>
			<name>type</name>
			<type>string</type>
			<required>No</required>
			<description>
			the type the new struct (normal,weak,linked)
			</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- structSort -->
	<function>
		<name>structSort</name>
		<class>railo.runtime.functions.struct.StructSort</class>
		<description>Returns an array of all the keys, ordered by the sort criteria of the values in the structure</description>
		<argument>
			<name>base</name>
			<type>struct</type>
			<required>Yes</required>
		<description>A structure with one field (an associative array).</description>
    </argument>
		<argument>
			<name>sortOrder</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>sortType</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>pathToSubElement</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- structUpdate -->
	<function>
		<name>structUpdate</name>
		<class>railo.runtime.functions.struct.StructUpdate</class>
		<description>Inserts the key/value into the structure, overwritting if already exists</description>
		<argument>
			<name>structure</name>
			<type>struct</type>
			<required>Yes</required>
		<description>Structure to update</description>
    </argument>
		<argument>
			<name>key</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- SystemOutput -->
	<function>
		<name>SystemOutput</name>
		<class>railo.runtime.functions.other.SystemOutput</class>
		<description>writes the given string to the output stream</description>
		<argument>
			<name>str</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>addNewLine</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>doErrorStream</name>
			<type>boolean</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- tan -->
	<function>
		<name>tan</name>
		<class>railo.runtime.functions.math.Tan</class>
		<description>Returns the trigonometric tan of an angle</description>
		<argument>
			<name>number</name>
			<type>number</type>
			<required>Yes</required>
		<description>Angle, in radians, for which to calculate the tangent.</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- timeFormat -->
	<function>
		<name>timeFormat</name>
		<class>railo.runtime.functions.displayFormatting.TimeFormat</class>
		<description>Formats a time string to a given output</description>
		<argument>
			<name>time</name>
			<type>any</type>
			<required>Yes</required>
		<description>A date/time value or string to convert</description>
    </argument>
		<argument>
			<name>mask</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- toBase64 -->
	<function>
		<name>toBase64</name>
		<class>railo.runtime.functions.string.ToBase64</class>
		<description>This takes in a string/binary object and attempts to convert it to a Base64 string</description>
		<argument>
			<name>strOrBin</name>
			<type>any</type>
			<required>Yes</required>
		<description>A string, the name of a string, or a binary object.</description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- toBinary -->
	<function>
		<name>toBinary</name>
		<class>railo.runtime.functions.other.ToBinary</class>
		<description>Converts the Base64 string to a binary object</description>
		<argument>
			<name>data</name>
			<type>any</type>
			<required>Yes</required>
		<description>A variable representing data in Base64-encoded format or a PDF document.</description>
    </argument>
		<return>
			<type>binary</type>
		</return>
	</function>
	<!-- ToScript -->
	<function>
		<name>ToScript</name>
		<class>railo.runtime.functions.conversion.ToScript</class>
		<description>Used to convert the given input to Actionscript/Javascript variable</description>
		<argument>
			<name>cfvar</name>
			<type>any</type>
			<required>Yes</required>
		<description>A variable.</description>
    </argument>
		<argument>
			<name>javascriptvar</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>outputformat</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>ASFormat</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- toString -->
	<function>
		<name>toString</name>
		<class>railo.runtime.functions.string.ToString</class>
		<description>For the given object, return back the string representation of the it</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>No</required>
		<description>Value to convert to a string; can be a simple value such as an integer, a binary object, or an XML document object.</description>
    </argument>
		<argument>
			<name>encoding</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- traceObject -->
	<function>
		<name>traceObject</name>
		<class>railo.runtime.functions.other.TraceObject</class>
		<status>unimplemeted</status>
		<description>wrapper to trace the usage of a soecific object</description>
		<argument>
			<name>object</name>
			<type>any</type>
			<required>Yes</required>
			<description>Object to trace</description>
		</argument>
		<argument>
			<name>label</name>
			<type>string</type>
			<required>Yes</required>
			<description>label for the entry in log</description>
		</argument>
		<argument>
			<name>logFile</name>
			<type>string</type>
			<required>Yes</required>
			<description>path to the log file</description>
		</argument>
		<return>
			<type>object</type>
		</return>
	</function>
	
	<!-- trim -->
	<function>
		<name>trim</name>
		<class>railo.runtime.functions.string.Trim</class>
		<description>Removes leading and trailing spaces from a string.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>the string to trim</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- uCase -->
	<function>
		<name>uCase</name>
		<class>railo.runtime.functions.string.UCase</class>
		<description>Returns the upper cased version of the string</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- ucFirst -->
	<function>
		<name>ucFirst</name>
		<class>railo.runtime.functions.string.UCFirst</class>
		<description>does the first character of the given string upper case.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- unserializeJava 
	deprecated replaced with evaluteJava
	-->
	<function>
		<name>unserializeJava</name>
		<class>railo.runtime.functions.dynamicEvaluation.UnserializeJava</class>
		<status>deprecated</status>
		<description>literal defintion of a serialized Java Object by function serialize</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>any</type>
		</return>
	</function>
	<!-- uRLDecode -->
	<function>
		<name>uRLDecode</name>
		<class>railo.runtime.functions.other.URLDecode</class>
		<description>Decodes the URL string to the original string, using the given encoding</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>URL-encoded string.</description>
    </argument>
		<argument>
			<name>charset</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- uRLEncode -->
	<function>
		<name>uRLEncode</name>
		<class>railo.runtime.functions.other.URLEncode</class>
		<description>encode a url</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>charset</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>force</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- uRLEncodedFormat -->
	<function>
		<name>uRLEncodedFormat</name>
		<class>railo.runtime.functions.other.URLEncodedFormat</class>
		<description>Encodes the string for use within a URL parameter, using the given encoding</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<argument>
			<name>charset</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>force</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- URLSessionFormat -->
	<function>
		<name>uRLSessionFormat</name>
		<class>railo.runtime.functions.other.URLSessionFormat</class>
		<description>Encodes the URL with the CFTOKEN/CFID/JSESSIONID</description>
		<argument>
			<name>url</name>
			<type>string</type>
			<required>Yes</required>
		<description>URL of a cfml template</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- val -->
	<function>
		<name>val</name>
		<class>railo.runtime.functions.string.Val</class>
		<description>Attempts to convert the string to a number</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- valueArray -->
	<function>
		<name>valueArray</name>
		<class>railo.runtime.functions.query.ValueArray</class>
		<description>Returns a array of all the values, for a given column within the query.</description>
		<argument>
			<name>query_column</name>
			<type>variable_string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>array</type>
		</return>
	</function>
	<!-- valueList -->
	<function>
		<name>valueList</name>
		<class>railo.runtime.functions.query.ValueList</class>
		<description>Returns a list of all the values, for a given column within the query, delimited by the value given</description>
		<argument>
			<name>query_column</name>
			<type>variable_string</type>
			<required>Yes</required>
		<description>Name of an executed query and column. Separate query name and column name with a period.</description>
    </argument>
		<argument>
			<name>delimiter</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- VerifyClient -->
	<function>
		<name>VerifyClient</name>
		<class>railo.runtime.functions.other.VerifyClient</class>
		<description>Requires remote invocations of the page or calls to functions on the page to include an encrypted security token.</description>
		<return>
			<type>void</type>
		</return>
	</function>
	<!-- week -->
	<function>
		<name>week</name>
		<class>railo.runtime.functions.dateTime.Week</class>
		<description>Returns the week number in the year of the date referenced</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description>date object</description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	
	<!-- lsweek -->
	<function>
		<name>lsweek</name>
		<class>railo.runtime.functions.international.LSWeek</class>
		<description>Returns the week number in the year of the date referenced, based on the loal influence. not everywhere the wekk begins on Monday by defintion.</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>locale</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- wrap -->
	<function>
		<name>wrap</name>
		<class>railo.runtime.functions.string.Wrap</class>
		<description>Wraps text so that each line has a specified maximum number of characters.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>The text to wrap.</description>
		</argument>
		<argument>
			<name>limit</name>
			<type>number</type>
			<required>Yes</required>
			<description>Positive integer maximum number of characters to allow on a line.</description>
		</argument>
		<argument>
			<name>strip</name>
			<type>boolean</type>
			<required>No</required>
			<description>Whether to remove all existing newline and carriage return characters in the input string with spaces before wrapping the text.</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- writeOutput -->
	<function>
		<name>writeOutput</name>
		<class>railo.runtime.functions.other.WriteOutput</class>
		<description>Writes the given string out to the main response buffer. see also function echo.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- echo -> alias for writeOutput -->
	<function>
		<name>echo</name>
		<class>railo.runtime.functions.other.WriteOutput</class>
		<description>Writes the given string out to the main response buffer. see also function writeOutput.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>boolean</type>
		</return>
	</function>
	<!-- xmlChildPos -->
	<function>
		<name>xmlChildPos</name>
		<class>railo.runtime.functions.xml.XmlChildPos</class>
		<description>Finds the given occurence number of the node within the XML object, returning -1 if not found</description>
		<argument>
			<name>node</name>
			<type>node</type>
			<required>Yes</required>
		<description>XML element within which to search.</description>
    </argument>
		<argument>
			<name>childName</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>index</name>
			<type>number</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- xmlElemNew -->
	<function>
		<name>xmlElemNew</name>
		<class>railo.runtime.functions.xml.XmlElemNew</class>
		<description>Creates a new child element for the XML object</description>
		<argument>
			<name>xmlObj</name>
			<type>node</type>
			<required>Yes</required>
		<description>Name of the XML document object in which you are creating the element</description>
    </argument>
		<argument>
			<name>childName</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>org.w3c.dom.Element</type>
		</return>
	</function>
	<!-- xMLFormat -->
	<function>
		<name>xMLFormat</name>
		<class>railo.runtime.functions.other.XMLFormat</class>
		<description>Encodes the given string for safe usage within XML nodes; escapes &gt;, &lt;, ', ", &amp; and also any high ASCII characters</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>A string or a variable that contains one</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- XmlGetNodeType -->
	<function>
		<name>XmlGetNodeType</name>
		<class>railo.runtime.functions.xml.XmlGetNodeType</class>
		<description>For the given XML node passed in, determines the type; returns NULL if not determined</description>
		<argument>
			<name>xmlObj</name>
			<type>node</type>
			<required>Yes</required>
		<description>An XML DOM object node</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- xmlNew -->
	<function>
		<name>xmlNew</name>
		<class>railo.runtime.functions.xml.XmlNew</class>
		<description>Creates a new XML document with optional case-sensitivity elements</description>
		<argument>
			<name>caseSensitive</name>
			<type>boolean</type>
			<required>No</required>
		<description>Determines how Railo processes the case of XML document object component identifiers:</description>
    </argument>
		<return>
			<type>node</type>
		</return>
	</function>
	<!-- xmlParse -->
	<function>
		<name>xmlParse</name>
		<class>railo.runtime.functions.xml.XmlParse</class>
		<description>Determines if the object passed in is an XML node</description>
		<argument>
			<name>xmlString</name>
			<type>string</type>
			<required>Yes</required>
		<description>Any of the following:</description>
    </argument>
		<argument>
			<name>caseSensitive</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<argument>
			<name>validator</name>
			<type>string</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>node</type>
		</return>
	</function>
	<!-- htmlParse -->
	<function>
		<name>htmlParse</name>
		<class>railo.runtime.functions.xml.HtmlParse</class>
		<description>parse the given html (not only xhtml) as xml Object, work similar to xmlParse, but this function is very forgiving with the syntax..</description>
		<argument>
			<name>html</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>caseSensitive</name>
			<type>boolean</type>
			<required>No</required>
		<description></description>
    </argument>
		<return>
			<type>node</type>
		</return>
	</function>
	<!-- xmlSearch -->
	<function>
		<name>xmlSearch</name>
		<class>railo.runtime.functions.xml.XmlSearch</class>
		<description>Performs an XPATH search against the XML, returning back an array of found nodes, or boolean, or count, or string depending on the search type</description>
		<argument>
			<name>node</name>
			<type>node</type>
			<required>Yes</required>
		<description>XML document object</description>
    </argument>
		<argument>
			<name>xPathString</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<return>
			<type>object</type>
		</return>
	</function>
	<!-- xmlTransform -->
	<function>
		<name>xmlTransform</name>
		<class>railo.runtime.functions.xml.XmlTransform</class>
		<description>Runs the given XSLT against the XML document specified</description>
		<argument>
			<name>xmlObj</name>
			<type>any</type>
			<required>Yes</required>
		<description>An XML document in string format, or an XML document object</description>
    </argument>
		<argument>
			<name>xslString</name>
			<type>string</type>
			<required>Yes</required>
		<description></description>
    </argument>
		<argument>
			<name>parameters</name>
			<type>array</type>
			<required>false</required>
		<description></description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- XmlValidate -->
	<function>
		<name>XmlValidate</name>
		<class>railo.runtime.functions.xml.XmlValidate</class>
		<description>Uses a Document Type Definition (DTD) or XML Schema to validate an XML text document or an XML document object.</description>
		<argument>
			<name>xml</name>
			<type>string</type>
			<required>Yes</required>
			<description>The XML to validate</description>
		</argument>
		<argument>
			<name>validator</name>
			<type>string</type>
			<required>No</required>
			<description>Any of the following:
 - A string containing a DTD or Schema.
 - The name of a DTD or Schema file.
 - The URL of a DTD or Schema file; valid protocol identifiers include http, https, ftp, and file.</description>
		</argument>
		<return>
			<type>struct</type>
		</return>
	</function>
	<!-- year -->
	<function>
		<name>year</name>
		<class>railo.runtime.functions.dateTime.Year</class>
		<description>From a date/time object, gets the year value.</description>
		<argument>
			<name>date</name>
			<type>datetime</type>
			<required>Yes</required>
			<description>The date from which to extract the year</description>
		</argument>
		<argument>
			<name>timezone</name>
			<type>string</type>
			<required>no</required>
			<description>The timezone that the date is based on</description>
		</argument>
		<return>
			<type>number</type>
		</return>
	</function>
	<!-- yesNoFormat -->
	<function>
		<name>yesNoFormat</name>
		<class>railo.runtime.functions.displayFormatting.YesNoFormat</class>
		<description>Yes, for a non-zero value; No, otherwise.</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
			<description>a value that can be casted to a boolean</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- trueFalseFormat -->
	<function>
		<name>trueFalseFormat</name>
		<class>railo.runtime.functions.displayFormatting.TrueFalseFormat</class>
		<description>True, for a non-zero value; False, otherwise.</description>
		<argument>
			<name>value</name>
			<type>any</type>
			<required>Yes</required>
			<description>a value that can be casted to a boolean</description>
		</argument>
		<return>
			<type>string</type>
		</return>
	</function>
</func-lib>